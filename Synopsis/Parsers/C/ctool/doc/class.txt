
cTool classes that store the parsed C code.

    Project
        The Project class is the interface to the parser, it manages
        the required internal state, simplifying the parsing of files.
        Multiple files can be parsed by a single project class, they
        are all stored until the class is destroyed.
        

    TransUnit
        TransUnit is a class that represents a single translation unit
        (c file) in a project.  A TranUnit stores a list of Statements.
        
 
    Statement
        A Statement is the abstract base class for all statements and
        blocks. The following classes derive from it:

       +Block
           A block of statements surrounded by braces.

           -FunctionDef
                A Function Definition:
                Derived from Block for convienence, it is a Block plus
                a Decl that represents the function's declaration.

       +InclStemnt
       +EndInclStemnt
            These two classes are used to assist in "unincluding" #included
            files when printing.

       +ExpressionStemnt
            This class is used for a statement that is an expression;
            i.e., an assignment statement.

       +IfStemnt
            This class represents an if with an optional else clause.

       +SwitchStemnt
            A switch statement and its body.

       +ForStemnt
            A for statement and its body.

       +WhileStemnt
            A while statement and its body.

       +DoWhileStemnt
            A do-while statement and its body.

       +GotoStemnt
            A goto statement.

       +ReturnStemnt
            A return statement.

       +DeclStemnt
            A declaration statement; possibly defining and initializing
            multiple variables.

    Label
        Both normal labels and case labels are represented by the Label
        class.  Any Statement can have one or more labels attached to it.

    Expression
        The abstract base class for all expressions.

       +Constant
           The abstract base for all constants.

           -IntConstant : an integer
           -FloatConstant : an floating point number
           -CharConstant : a character constant
           -StringConstant : a string constant
           -EnumConstant : an enumerated symbol (from an enum)
           -ArrayConstant : an array of constants (for initializing an array).

       +Variable : a variable
       +FunctionCall : a call of a function
       +UnaryExpr : a unary expression, bitwise not, negation, etc.
       +BinaryExpr : a binary expression
           -AssignExpr : an assignment to an lvalue
           -RelExpr : a relational expression 

       +TrinaryExpr : the trinary ?: operator
       +CastExpr : a cast
       +SizeofExpr : a sizeof expression
       +IndexExpr : an index expression, dereferencing an array with []
    
    Decl
        A declaration.

    Type
        The abstract base class for all constructed types. 
        Types are constructed from the following pieces along
        with the base types.
 
       +PtrType - a pointer to a type
       +ArrayType - an array of types
       +BitFieldType - a bit field 
       +FunctionType - a function
       +StructType - a struct or union
       +EnumType - an enum type

    Symbol
        An identifier. 

