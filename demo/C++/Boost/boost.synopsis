"""Synopsis Project File v1
This file is auto-generated. If you must make changes by hand, please make a backup just in case."""
class struct:
 def __init__(self,**args):
  for k,v in args.items(): setattr(self, k, v)

class Project:
  name = 'Boost Python'
  data_dir = './'
  verbose = 1
  actions = [
    ['FormatAction', 327, 237, 'HTML Formatter', struct(
      stylesheet='style.css',
      stylesheet_file='../html.css',
      pages=['FramesIndex', 'ScopePages', 'ModuleListing', 'ModuleIndexer', 'FileListing', 'FileIndexer', 'FileDetails', 'InheritanceTree', 'InheritanceGraph', 'FileSource', 'NameIndex', 'XRefPages'],
      InheritanceGraph=struct(
        min_size=3,
	min_group_size=5,
	direction='horizontal'
      ),
      ScopePages=struct(
        parts=['Heading', 'Summary', 'Inheritance', 'Detail'],
        heading_formatters=['Heading', 'ClassHierarchyGraph', 'DetailCommenter', 'SourceLinker', 'XRefLinker'],
        summary_formatters=['SummaryAST', 'SummaryCommenter', 'SourceLinker', 'XRefLinker'],
        detail_formatters=['DetailAST', 'DetailCommenter', 'SourceLinker', 'XRefLinker']
      ),
      datadir='/usr/local/share/synopsis',
      file_layout='Synopsis.Formatter.HTML.FileLayout.FileLayout',
      tree_formatter='TreeFormatter.TreeFormatter',
      comment_formatters=['quotehtml', 'summary', 'section'],
      FileSource=struct(
        toc_files=[],
        file_path='boost/%s',
        scope='',
        links_path='BoostLinks/%s'
      ),
      XRefPages=struct(
	xref_file='BoostXRef/compiled.xref'
      ),
      name='HTML',
      verbose=1,
      structs_as_classes=1,
      output_dir='BoostPython/',
      ModuleListing=struct()
    )],
    ['FormatAction', 327, 237, 'HTML Formatter - No Frames', struct(
      stylesheet='style.css',
      stylesheet_file='../html.css',
      pages=['DirBrowse', 'ScopePages', 'ModuleListing', 'InheritanceTree', 'InheritanceGraph', 'FilePages', 'RawFilePages', 'NameIndex', 'XRefPages'],
      default_toc='ScopePages',
      base_dir='boost/',
      start_dir='boost/boost/',
      ModuleListing=struct(
	short_title='Namespaces'
      ),
      InheritanceGraph=struct(
        min_size=3,
	min_group_size=5,
	direction='horizontal'
      ),
      ScopePages=struct(
        parts=['Heading', 'Summary', 'Inheritance', 'Detail'],
        heading_formatters=['Heading', 'ClassHierarchyGraph', 'DetailCommenter', 'SourceLinker', 'XRefLinker'],
        summary_formatters=['SummaryAST', 'SummaryCommenter', 'SourceLinker', 'XRefLinker'],
        detail_formatters=['DetailAST', 'DetailCommenter', 'SourceLinker', 'XRefLinker']
      ),
      datadir='/usr/local/share/synopsis',
      file_layout='Synopsis.Formatter.HTML.FileLayout.FileLayout',
      tree_formatter='TreeFormatter.TreeFormatter',
      comment_formatters=['quotehtml', 'summary', 'section'],
      FilePages=struct(
        toc_files=[],
        file_path='boost/%s',
        scope='',
        links_path='BoostLinks/%s'
      ),
      FileTree=struct(
        link_to_pages=1
      ),
      XRefPages=struct(
	xref_file='BoostXRef/compiled.xref'
      ),
      name='HTML',
      verbose=1,
      structs_as_classes=1,
      output_dir='BoostPythonNF/'
    )],
    ['SourceAction', 47, 41, 'Boost Sources', [
      ['Base', 'boost/boost/', '*.hpp']
    ]],
    ['SourceAction', 47, 41, 'Boost Python Sources', [
      ['Simple', ['boost/boost/python.hpp']],
      ['Base', 'boost/boost/python/', '*.hpp'],
      ['Exclude', '*/CVS/*']
    ]],
    ['ParserAction', 151, 57, 'C++ Parser', struct(
      defines=['PYTHON_INCLUDE=<python2.2/Python.h>', 'BOOST_PYTHON_SYNOPSIS'],
      name='C++',
      basename='boost/',
      include_path=['boost', '/usr/include/python2.2'],
      main_file=1,
      verbose=0,
      emulate_compiler='g++-3.2',
      syntax_prefix='BoostLinks/',
      xref_prefix='BoostXRef/',
      multiple_files=1
    )],
    ['CacherAction', 237, 57, 'File Cacher', 'BoostFiles', None],
    ['SourceAction', 50, 126, 'Test Source', [
      ['Simple', 'boost/boost/python/dict.hpp', None]
    ]],
    ['LinkerAction', 326, 58, 'Combined AST', struct(
      name='Linker',
      comment_processors=['dummy', 'ss'],
      operations=['Unduplicator', 'Stripper', 'NameMapper', 'Comments', 'EmptyNS', 'AccessRestrictor', 'XRefCompiler'],
      XRefCompiler=struct(
	xref_path='BoostXRef/%s',
	xref_file='BoostXRef/compiled.xref'
      )
    )],
    ['CacherAction', 327, 145, 'Combined AST Cache', 'BoostFiles', '']
  ]
  channels = [
    #('Boost Sources', 'C++ Parser'),
    ('Boost Python Sources', 'C++ Parser'),
    #('Test Source', 'C++ Parser'),
    ('C++ Parser', 'File Cacher'),
    ('File Cacher', 'Combined AST'),
    ('Combined AST', 'Combined AST Cache'),
    ('Combined AST Cache', 'HTML Formatter'),
    ('Combined AST Cache', 'HTML Formatter - No Frames')
  ]
  default_formatter = 'HTML Formatter'
