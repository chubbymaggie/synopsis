#
# Copyright (C) 2003 Stefan Seefeld
# All rights reserved.
# Licensed to the public under the terms of the GNU LGPL (>= 2),
# see the file COPYING for details.
#

SHELL	:= /bin/sh

srcdir	:= @srcdir@
topdir	:= @topdir@

synopsis := python synopsis.py

# This is a default setting suitable for the sxr-server demo applet
# use 'make sxr sxr=<URL>' to generate the sxr db for another URL
sxr	:= http://localhost:8000/sxr.cgi

python_src	:= $(wildcard $(topdir)/Synopsis/*.py)
python_src	+= $(shell find $(topdir)/Synopsis/Parsers -name '*.py' -print)
python_src	+= $(shell find $(topdir)/Synopsis/Processors -name '*.py' -print)
python_src	+= $(shell find $(topdir)/Synopsis/Formatters -name '*.py' -print)
python_src	+= $(shell find $(topdir)/Synopsis/dist -name '*.py' -print)
# don't include UI yet, as it isn't up to date with the rest
python_syn	:= $(patsubst $(topdir)/%.py, %.syn, $(python_src))

texi-help	:= aux cp cps fn fns ky log pg toc tp tps vr vrs


TEXI		:= ast.texi type.texi util.texi \
            parsers-cxx.texi parsers-idl.texi parsers-py.texi \
            processors.texi \
            formatters-ascii.texi formatters-html.texi formatters-dump.texi \
            formatters-dia.texi formatters-db.texi formatters-dot.texi \
            formatters-html-simple.texi formatters-texi.texi

vpath %.py $(topdir)
vpath %.cc $(topdir)
vpath %.h $(topdir)
vpath %.hh $(topdir)
vpath Manual.texi $(srcdir)

all: html pdf info

html: html/python html/cxx-api html/ucpp html/occ html/ctool 
sxr: html/sxr
pdf: Manual.pdf

html/%: %.syn %.xref
	@echo formatting $@
	$(synopsis) html --output=$@ $<
	touch $@

html/sxr: sxr.syn
	@echo formatting $@
	$(synopsis) sxr --url=$(sxr) --output=$@ $<
	touch $@

sxr.syn: python.syn cxx-api-impl.syn ucpp-impl.syn occ-impl.syn ctool-impl.syn
	@echo generating $@
	$(synopsis) archive --output=$@ $^

%.xref: %.syn
	@echo generating $@
	$(synopsis) xref --output=$@ $<

# Compile Python files
$(python_syn): %.syn: %.py
	@echo parsing $^
	mkdir -p $(dir $@)
	$(synopsis) python --output=$@ $^

# Link Python files together
python.syn: $(python_syn)
	@echo linking Python files together
	$(synopsis) link_python --output=$@ $^

ast.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::AST' --output=$@ $^

type.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Type' --output=$@ $^

util.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Util' --output=$@ $^

parsers-cxx-py.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Parsers::Cxx' --output=$@ $^

parsers-cxx-cpp.syn:	occ.syn
	@echo linking $@
	$(synopsis) link --output=$@ $^

parsers-cxx.syn:	parsers-cxx-py.syn parsers-cxx-cpp.syn
	@echo linking $@
	$(synopsis) link --output=$@ $^

parsers-idl.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Parsers::IDL' --output=$@ $^

parsers-py.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Parsers::Python' --output=$@ $^

processors.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Processors' --output=$@ $^

formatters-ascii.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Formatters::ASCII' --output=$@ $^

formatters-html.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Formatters::HTML' --output=$@ $^

formatters-dump.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Formatters::Dump' --output=$@ $^

formatters-dia.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Formatters::Dia' --output=$@ $^

formatters-db.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Formatters::DocBook' --output=$@ $^

formatters-dot.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Formatters::Dot' --output=$@ $^

formatters-html-simple.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Formatters::HTML_Simple' --output=$@ $^

formatters-texi.syn:	python.syn
	@echo linking $@
	$(synopsis) strip --scope='Synopsis::Formatters::TexInfo' --output=$@ $^

%.texi:   %.syn
	@echo formatting $@
	$(synopsis) texi --output=$@ $^

Manual.pdf:	Manual.texi $(TEXI)
	@echo generating $@
	texi2pdf -I $(srcdir) $?

info:	$(TEXI) Manual.texi
	@echo generating info files
	makeinfo -I $(srcdir) Manual.texi

install: all
	mkdir -p $(datadir)/Synopsis
	cp -pr html $(datadir)/Synopsis
	mkdir -p $(infodir)
	install -m644 synopsis.info* $(infodir)
	install -m644 Manual.pdf $(datadir)/Synopsis

clean:
	rm -rf Synopsis links xref *.syn links.toc $(TEXI) \
     $(addprefix Manual., $(texi-help))

distclean:  clean
	rm -rf html Manual.pdf *.info* 

