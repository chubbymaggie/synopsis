#! /usr/bin/env python

from Synopsis import config
from Synopsis.process import process
from Synopsis.Processor import *
from Synopsis.Processors import *
from Synopsis.Parsers import Python
from Synopsis.Parsers import Cxx
from Synopsis.Formatters import HTML
from Synopsis.Formatters.HTML.FileLayout import *
from Synopsis.Formatters.HTML.TreeFormatterJS import *
from Synopsis.Formatters.HTML import Comments
from Synopsis.Formatters.HTML.Views import *
from Synopsis.Formatters import Texinfo
from Synopsis.Formatters import Dump

from distutils import sysconfig
import sys, os, os.path

topdir = '@topdir@'
python = Composite(Python.Parser(basename = topdir + os.sep),
                   JavaTags(),
                   Summarizer())

cxx = Cxx.Parser(base_path = topdir + os.sep,
                 cppflags = ['-I%s'%(topdir + '/include'),
                             '-I%s'%(sysconfig.get_python_inc())],
                 syntax_prefix='links',
                 xref_prefix='xref')

cxx_processor = Linker(SSDComments(),
                       JavaTags(),
                       Summarizer())

html = HTML.Formatter(toc_out = 'links.toc',
                      file_layout = NestedFileLayout(),
                      tree_formatter = TreeFormatterJS(),
                      comment_formatters = [Comments.Javadoc(), Comments.Section()],
                      views = [FramesIndex(),
                               Scope(),
                               Source(prefix = 'links',
                                      toc_in = ['links.toc']),
                               XRef(xref_file = 'all.xref'),
                               ModuleListing(),
                               ModuleIndexer(),
                               FileListing(),
                               FileIndexer(),
                               FileDetails(),
                               InheritanceTree(),
                               InheritanceGraph(),
                               NameIndex()])

class SXR(HTML.Formatter):
    """This is a facade to the HTML.Formatter. It adds an 'url' parameter and
    dispatches it to various 'views'."""

    file_layout = Parameter(NestedFileLayout(), '')
    url = Parameter('/sxr.cgi', 'the base url to use fpr the sxr cgi')

    def process(self, ast, **kwds):

        self.set_parameters(kwds)

        self.views = [SXRIndex(sxr_cgi = self.url),
                      DirBrowse(src_dir = '@topdir@',
                                base_path = '@topdir@',
                                exclude = ['build', 'demo', 'share',
                                           '.svn', 'autom4te.cache',
                                           '*.pyc']),
                      Source(prefix = 'links',
                             external_url = '%s/ident?full=1&string='%self.url),
                      RawFile(src_dir = '@topdir@',
                              base_path = '@topdir@',
                              exclude = ['build', 'demo', 'share',
                                         '.svn', 'autom4te.cache',
                                         '*.pyc'])]

        HTML.Formatter.process(self, ast, **kwds)

process(python = python,
        cxx = cxx,
        link_python = Linker(),
        link_cxx = cxx_processor,
        link = Linker(),
        archive = Processor(),
        strip = Stripper(),
        xref = XRefCompiler(prefix='xref'),
        html = html,
        sxr = SXR(),
        dump = Dump.Formatter(),
        texi = Texinfo.Formatter())
