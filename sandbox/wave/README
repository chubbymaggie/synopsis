This is experimental code !

Use boost.wave as a Cpp backend.

This is presently not included in the default build,
as it requires a recent (CVS) version of boost.

The usual 'python setup.py build' will only prepare
the build tree (i.e. configure it), but not build.
You may want to modify the generatee Makefile to
make it work for you.

configure
=========

call './autogen.sh', followed by at least
'python setup.py config'.

build
=====

* cd into build/temp.<platform>/sandbox/wave

* Adjust the Makefile as needed and call 'make'.
* Copy the resulting 'wave.so' into the source tree at
  $root/Synopsis/Parsers/Cpp/.
* Adjust 'Parser.py' by replacing 'ucpp' by 'wave' in
  lines 14 and 38

test
====

* Set your PYTHONPATH variable to include the Synopsis
  source tree.

* Run 'synopsis -p Cpp -o foo.syn bar.cc'.
  The default language is C++. To use C, add '-Wp,--language=C'
  to the options.

Enjoy !

Stefan
