#!/usr/bin/env python
#
# Copyright (C) 2004 Stefan Seefeld
# All rights reserved.
# Licensed to the public under the terms of the GNU LGPL (>= 2),
# see the file COPYING for details.
#

from Synopsis import config

from BaseHTTPServer import HTTPServer
from CGIHTTPServer import CGIHTTPRequestHandler
import sys, os, os.path, getopt, socket

document_root = '.'
url = ''
src = ''
debug = False

class RequestHandler(CGIHTTPRequestHandler):
   """This little demo server emulates apache's 'Alias' and 'ScriptAlias'
   options to serve source files and data generated from sxr.cgi"""

   def translate_path(self, path):
      
      if debug: print 'translate_path', path
      # similar to an 'Alias <src> <document_root>' under apache...
      if path.startswith(src): # a file request...
         path = os.path.join(document_root, path[len(src) + 1:])
      # hack to be able to serve absolute URLs from the document root
      elif not path.endswith('sxr.cgi'):
         path = os.path.join(document_root, path[1:])

      return path

   def is_cgi(self):
      """The path either refers to the sxr cgi or to a (source) file."""

      if self.path.startswith(url):
         self.cgi_info = config.datadir + '/cgi-bin', 'sxr.cgi' + self.path[len(url):]
         if debug: print 'is_cgi', self.path, self.cgi_info
         return True

      if debug: print 'is_cgi False'
      return False
      

def usage():
   print 'Usage : %s [options] <input files>'%sys.argv[0]
   print """
List of options:

  -h, --help             help
  -d, --debug            print debug output
  -p, --port             port to listen for requests
  -r, --document_root    document root, i.e. top level directory (for things like stylesheets)
  -u, --url              base url under which to reach sxr.cgi
  -s, --src              base url under which to reach source files
"""

def run():
   global document_root, url, src, debug

   port = 8000
   env = {}
   opts, args = getopt.getopt(sys.argv[1:],
                              'p:r:u:s:dh',
                              ['port=', 'document_root=', 'url=', 'src=',
                               'debug', 'help'])
   for o, a in opts:
      if o == '-h' or o == '--help':
         usage()
         sys.exit(0)
      elif o == '-p' or o == '--port':
         port = int(a)
      elif o == '-r' or o == '--document_root':
         env['SXR_ROOT_DIR'] = a
         document_root = a
      elif o == '-u' or o == '--url':
         env['SXR_CGI_URL'] = a
         url = a
      elif o == '-s' or o == '--src':
         env['SXR_SRC_URL'] = a
         src = a
      elif o == '-d' or o == '--debug':
         debug = True

   if not os.path.isfile(os.path.join(document_root, 'xref_db')):
      print 'please set the document root to a valid value !'
      usage()
      sys.exit(-1)
      


   os.environ.update(env)

   httpd = HTTPServer(('', port), RequestHandler)
   print 'SXR server running, please connect to http://%s:%d%s ...'%(socket.gethostname(), port, src)
   try:
      httpd.serve_forever()
   except KeyboardInterrupt:
      print 'Keyboard Interrupt: exiting'

if __name__ == '__main__':
   run()

