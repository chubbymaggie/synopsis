<?xml version='1.0' encoding='ISO-8859-1'?>
<ast>
 <declarations>
  <instance accessibility="0" class="Synopsis.AST.Class" file="Parsers/Cxx/input/condition.cc" language="C++" line="2" name="X" type="struct">
   <comments>
    <instance class="Synopsis.AST.Comment" line="0" suspect="0">
     <file>
      Parsers/Cxx/input/condition.cc
     </file>
     <text>
      // Tests the ability to use a declaration in the condition of an if or switch

     </text>
    </instance>
   </comments>
   <declarations>
    <instance accessibility="1" class="Synopsis.AST.Operation" file="Parsers/Cxx/input/condition.cc" language="C++" line="4" name="X.(bool)()const" realname="(bool)" type="member function">
     <returnType>
      <instance class="Synopsis.Type.Base" language="C++" name="bool"/>
     </returnType>
    </instance>
    <instance accessibility="1" class="Synopsis.AST.Class" file="Parsers/Cxx/input/condition.cc" language="C++" line="5" name="X.Y" type="struct">
     <declarations>
      <instance accessibility="1" class="Synopsis.AST.Operation" file="Parsers/Cxx/input/condition.cc" language="C++" line="7" name="X.Y.(bool)()const" realname="(bool)" type="member function">
       <returnType/>
      </instance>
      <instance accessibility="1" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/condition.cc" language="C++" line="7" name="EOS" type="EOS"/>
     </declarations>
    </instance>
    <instance accessibility="1" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/condition.cc" language="C++" line="7" name="EOS" type="EOS"/>
   </declarations>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/condition.cc" language="C++" line="10" name="foo()" realname="foo" type="function">
   <returnType>
    <instance class="Synopsis.Type.Base" language="C++" name="void"/>
   </returnType>
  </instance>
 </declarations>
 <types>
  <instance class="Synopsis.Type.Declared" language="C++" name="EOS">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="X">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="X.(bool)()const">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="X.Y">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="X.Y.(bool)()const">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="foo()">
   <declaration/>
  </instance>
 </types>
 <files>
  <file>
   Parsers/Cxx/input/condition.cc
  </file>
 </files>
</ast>
