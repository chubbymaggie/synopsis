<?xml version='1.0' encoding='ISO-8859-1'?>
<ast>
 <declarations>
  <instance accessibility="0" class="Synopsis.AST.Class" file="Parsers/Cxx/input/const.cc" language="C++" line="1" name="Foo" type="struct">
   <declarations>
    <instance accessibility="1" class="Synopsis.AST.Operation" file="Parsers/Cxx/input/const.cc" language="C++" line="3" name="Foo.foo(int)" realname="foo" type="member function">
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="param" value="">
       <type>
        <instance class="Synopsis.Type.Base" language="C++" name="int"/>
       </type>
      </instance>
     </parameters>
     <returnType>
      <instance class="Synopsis.Type.Base" language="C++" name="void"/>
     </returnType>
    </instance>
    <instance accessibility="1" class="Synopsis.AST.Operation" file="Parsers/Cxx/input/const.cc" language="C++" line="4" name="Foo.foo(int)const" realname="foo" type="member function">
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="param" value="">
       <type/>
      </instance>
     </parameters>
     <postmodifier>
      const
     </postmodifier>
     <returnType/>
    </instance>
    <instance accessibility="1" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/const.cc" language="C++" line="4" name="EOS" type="EOS"/>
   </declarations>
  </instance>
 </declarations>
 <types>
  <instance class="Synopsis.Type.Declared" language="C++" name="EOS">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="Foo">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="Foo.foo(int)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="Foo.foo(int)const">
   <declaration/>
  </instance>
 </types>
 <files>
  <instance class="Synopsis.AST.SourceFile" filename="Parsers/Cxx/input/const.cc" is_main="1" language="C++">
   <declarations/>
   <macro_calls/>
  </instance>
 </files>
</ast>
