<?xml version='1.0' encoding='ISO-8859-1'?>
<ast>
 <declarations>
  <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/func.cc" language="C++" line="1" name="func(char)" realname="func" type="function">
   <parameters>
    <instance class="Synopsis.AST.Parameter" identifier="" value="">
     <type>
      <instance class="Synopsis.Type.Base" language="C++" name="char"/>
     </type>
    </instance>
   </parameters>
   <returnType>
    <instance class="Synopsis.Type.Base" language="C++" name="void"/>
   </returnType>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/func.cc" language="C++" line="2" name="func(int)" realname="func" type="function">
   <parameters>
    <instance class="Synopsis.AST.Parameter" identifier="" value="">
     <type>
      <instance class="Synopsis.Type.Base" language="C++" name="int"/>
     </type>
    </instance>
   </parameters>
   <returnType/>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/func.cc" language="C++" line="3" name="func(double)" realname="func" type="function">
   <parameters>
    <instance class="Synopsis.AST.Parameter" identifier="" value="">
     <type>
      <instance class="Synopsis.Type.Base" language="C++" name="double"/>
     </type>
    </instance>
   </parameters>
   <returnType/>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/func.cc" language="C++" line="4" name="func(const char*)" realname="func" type="function">
   <parameters>
    <instance class="Synopsis.AST.Parameter" identifier="" value="">
     <type>
      <instance class="Synopsis.Type.Modifier" language="C++">
       <alias/>
       <postmod>
        *
       </postmod>
       <premod>
        const
       </premod>
      </instance>
     </type>
    </instance>
   </parameters>
   <returnType/>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/func.cc" language="C++" line="6" name="test()" realname="test" type="function">
   <returnType/>
  </instance>
 </declarations>
 <types>
  <instance class="Synopsis.Type.Declared" language="C++" name="func(char)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="func(const char*)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="func(double)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="func(int)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="test()">
   <declaration/>
  </instance>
 </types>
 <files>
  <file>
   Parsers/Cxx/input/func.cc
  </file>
 </files>
</ast>
