<?xml version='1.0' encoding='ISO-8859-1'?>
<ast>
 <declarations>
  <instance accessibility="0" class="Synopsis.AST.Macro" file="Parsers/Cxx/input/static_cast.cc" language="C++" line="2" name="CAT" text="CAT_D(a, b)" type="macro">
   <parameters>
    a
    b
   </parameters>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Macro" file="Parsers/Cxx/input/static_cast.cc" language="C++" line="3" name="CAT_D" text="a ## b" type="macro">
   <parameters>
    a
    b
   </parameters>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Macro" file="Parsers/Cxx/input/static_cast.cc" language="C++" line="5" name="AB" text="CAT(x, y)" type="macro">
   <parameters>
    x
    y
   </parameters>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Variable" constr="0" file="Parsers/Cxx/input/static_cast.cc" language="C++" line="7" name="XY" type="global variable">
   <comments>
    <instance class="Synopsis.AST.Comment" file="Parsers/Cxx/input/static_cast.cc" line="6" suspect="0">
     <text>
      // There should be a variable XY here

     </text>
    </instance>
   </comments>
   <vtype>
    <instance class="Synopsis.Type.Base" language="C++" name="int"/>
   </vtype>
  </instance>
 </declarations>
 <types>
  <instance class="Synopsis.Type.Declared" language="C++" name="AB">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="CAT">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="CAT_D">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="XY">
   <declaration/>
  </instance>
 </types>
 <files>
  <instance class="Synopsis.AST.SourceFile" filename="Parsers/Cxx/input/static_cast.cc" is_main="1" language="C++">
   <declarations/>
   <macro_calls>
    <key>
     8
    </key>
    <value>
     <instance class="Synopsis.AST.MacroCall" diff="0" end="15" name="CAT" start="0"/>
    </value>
   </macro_calls>
  </instance>
 </files>
</ast>
