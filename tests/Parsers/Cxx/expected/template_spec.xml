<?xml version='1.0' encoding='ISO-8859-1'?>
<ast>
 <declarations>
  <instance accessibility="0" class="Synopsis.AST.Class" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="3" name="list" type="class">
   <template>
    <instance class="Synopsis.Type.Template" language="C++" name="list">
     <declaration/>
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="" value="">
       <premodifier>
        typename
       </premodifier>
       <type>
        <instance class="Synopsis.Type.Dependent" language="C++" name="T"/>
       </type>
      </instance>
     </parameters>
    </instance>
   </template>
   <comments>
    <instance class="Synopsis.AST.Comment" line="0" suspect="0">
     <file>
      Parsers/Cxx/input/template_spec.cc
     </file>
     <text>
      // Test template specializations

     </text>
    </instance>
   </comments>
   <declarations>
    <instance accessibility="1" class="Synopsis.AST.Operation" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="6" name="list.list(T*,int)" realname="list" type="member function">
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="" value="">
       <type>
        <instance class="Synopsis.Type.Modifier" language="C++">
         <alias/>
         <postmod>
          *
         </postmod>
        </instance>
       </type>
      </instance>
      <instance class="Synopsis.AST.Parameter" identifier="size" value="">
       <type>
        <instance class="Synopsis.Type.Base" language="C++" name="int"/>
       </type>
      </instance>
     </parameters>
    </instance>
    <instance accessibility="1" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="6" name="EOS" type="EOS"/>
   </declarations>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Class" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="10" name="list&lt;void&gt;" type="class">
   <template>
    <instance class="Synopsis.Type.Template" language="C++" name="list&lt;void&gt;">
     <declaration/>
    </instance>
   </template>
   <declarations>
    <instance accessibility="1" class="Synopsis.AST.Operation" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="13" name="list&lt;void&gt;.list(void*,int)" realname="list" type="member function">
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="" value="">
       <type>
        <instance class="Synopsis.Type.Modifier" language="C++">
         <alias>
          <instance class="Synopsis.Type.Base" language="C++" name="void"/>
         </alias>
         <postmod>
          *
         </postmod>
        </instance>
       </type>
      </instance>
      <instance class="Synopsis.AST.Parameter" identifier="size" value="">
       <type/>
      </instance>
     </parameters>
    </instance>
    <instance accessibility="1" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="13" name="EOS" type="EOS"/>
   </declarations>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Class" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="17" name="list&lt;int&gt;" type="class">
   <template>
    <instance class="Synopsis.Type.Template" language="C++" name="list&lt;int&gt;">
     <declaration/>
    </instance>
   </template>
   <declarations>
    <instance accessibility="1" class="Synopsis.AST.Operation" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="20" name="list&lt;int&gt;.list(int*,int)" realname="list" type="member function">
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="" value="">
       <type>
        <instance class="Synopsis.Type.Modifier" language="C++">
         <alias/>
         <postmod>
          *
         </postmod>
        </instance>
       </type>
      </instance>
      <instance class="Synopsis.AST.Parameter" identifier="size" value="">
       <type/>
      </instance>
     </parameters>
    </instance>
    <instance accessibility="1" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/template_spec.cc" language="C++" line="20" name="EOS" type="EOS"/>
   </declarations>
  </instance>
 </declarations>
 <types>
  <instance class="Synopsis.Type.Declared" language="C++" name="list">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="list&lt;int&gt;.list(int*,int)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="list.list(T*,int)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="EOS">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="list&lt;int&gt;">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="list&lt;void&gt;">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="list&lt;void&gt;.list(void*,int)">
   <declaration/>
  </instance>
 </types>
 <files>
  <file>
   Parsers/Cxx/input/template_spec.cc
  </file>
 </files>
</ast>
