<?xml version='1.0' encoding='ISO-8859-1'?>
<ast>
 <declarations>
  <instance accessibility="0" class="Synopsis.AST.Module" file="Parsers/Cxx/input/using4.cc" language="C++" line="0" name="D" type="namespace">
   <comments>
    <instance class="Synopsis.AST.Comment" file="Parsers/Cxx/input/using4.cc" line="0" suspect="0">
     <text>
      // From C++WD'96 7.4.3.6 Example

     </text>
    </instance>
    <instance class="Synopsis.AST.Comment" file="Parsers/Cxx/input/using4.cc" line="0" suspect="0">
     <text>
      // namespace extension

     </text>
    </instance>
   </comments>
   <declarations>
    <instance accessibility="0" class="Synopsis.AST.Variable" constr="0" file="Parsers/Cxx/input/using4.cc" language="C++" line="4" name="D.d1" type="namespace variable">
     <vtype>
      <instance class="Synopsis.Type.Base" language="C++" name="int"/>
     </vtype>
    </instance>
    <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/using4.cc" language="C++" line="5" name="D.f(char)" realname="f" type="function">
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="" value="">
       <type>
        <instance class="Synopsis.Type.Base" language="C++" name="char"/>
       </type>
      </instance>
     </parameters>
     <returnType>
      <instance class="Synopsis.Type.Base" language="C++" name="void"/>
     </returnType>
    </instance>
    <instance accessibility="0" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/using4.cc" language="C++" line="5" name="EOS" type="EOS"/>
    <instance accessibility="0" class="Synopsis.AST.Variable" constr="0" file="Parsers/Cxx/input/using4.cc" language="C++" line="18" name="D.d2" type="namespace variable">
     <vtype/>
    </instance>
    <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/using4.cc" language="C++" line="20" name="D.f(int)" realname="f" type="function">
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="" value="">
       <type/>
      </instance>
     </parameters>
     <returnType/>
    </instance>
    <instance accessibility="0" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/using4.cc" language="C++" line="20" name="EOS" type="EOS"/>
   </declarations>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Variable" constr="0" file="Parsers/Cxx/input/using4.cc" language="C++" line="9" name="d1" type="global variable">
   <vtype/>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Module" file="Parsers/Cxx/input/using4.cc" language="C++" line="0" name="E" type="namespace">
   <comments>
    <instance class="Synopsis.AST.Comment" file="Parsers/Cxx/input/using4.cc" line="0" suspect="0">
     <text>
      // ok, no conflict with D::d1

     </text>
    </instance>
   </comments>
   <declarations>
    <instance accessibility="0" class="Synopsis.AST.Variable" constr="0" file="Parsers/Cxx/input/using4.cc" language="C++" line="12" name="E.e" type="namespace variable">
     <vtype/>
    </instance>
    <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/using4.cc" language="C++" line="13" name="E.f(int)" realname="f" type="function">
     <parameters>
      <instance class="Synopsis.AST.Parameter" identifier="" value="">
       <type/>
      </instance>
     </parameters>
     <returnType/>
    </instance>
    <instance accessibility="0" class="Synopsis.AST.Builtin" file="Parsers/Cxx/input/using4.cc" language="C++" line="13" name="EOS" type="EOS"/>
   </declarations>
  </instance>
  <instance accessibility="0" class="Synopsis.AST.Function" file="Parsers/Cxx/input/using4.cc" language="C++" line="23" name="f()" realname="f" type="function">
   <returnType/>
  </instance>
 </declarations>
 <types>
  <instance class="Synopsis.Type.Declared" language="C++" name="D">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="D.d1">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="D.d2">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="D.f(char)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="D.f(int)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="E">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="E.e">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="E.f(int)">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="EOS">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="d1">
   <declaration/>
  </instance>
  <instance class="Synopsis.Type.Declared" language="C++" name="f()">
   <declaration/>
  </instance>
 </types>
 <files>
  <instance class="Synopsis.AST.SourceFile" filename="Parsers/Cxx/input/using4.cc" is_main="1" language="C++">
   <declarations/>
   <macro_calls/>
  </instance>
 </files>
</ast>
