<?xml version='1.0' encoding='ISO-8859-1'?>
<!DOCTYPE results PUBLIC "-//QM/2.3/QMTest/Result//EN" "http://www.codesourcery.com/qm/dtds/2.3/qmtest/result.dtd">
<results>
<annotation key="CPPFLAGS">
 -I /group/fresco/local/include/python2.3  -I/group/synopsis/workspace/Synopsis/build/ctemp.linux-i686/src -I/group/synopsis/workspace/Synopsis/src
</annotation>
<annotation key="qmtest.run.username">
 stefan
</annotation>
<annotation key="qmtest.run.userid">
 2001
</annotation>
<annotation key="qmtest.run.start_time">
 2005-06-22T19:32:16Z
</annotation>
<annotation key="CXX">
 g++
</annotation>
<annotation key="CXXFLAGS">
 -g -O2
</annotation>
<annotation key="qmtest.run.uname">
 Linux frida 2.4.29 #1 Wed Jan 26 22:40:49 UTC 2005 i686
</annotation>
<annotation key="LDFLAGS">
 -rdynamic
</annotation>
<annotation key="qmtest.run.end_time">
 2005-06-22T19:33:06Z
</annotation>
<annotation key="LIBS">
  -L/group/synopsis/workspace/Synopsis/build/ctemp.linux-i686/src/lib -lSupport -lSynopsis   -L /group/fresco/local/lib/python2.3/config -lpython2.3 -lpthread -ldl  -lutil
</annotation>
<annotation key="qmtest.run.command_line">
 /group/synopsis/local/bin/qmtest run
</annotation>
<annotation key="qmtest.run.version">
 2.2
</annotation>
 <result id="Cxx.ConstEvaluator" kind="resource_setup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.ConstEvaluator.enum" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:23Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:23Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.ConstEvaluator.variables" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:23Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:23Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.Encoding" kind="resource_setup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.Encoding.simple" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:30Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:30Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.Parser" kind="resource_setup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.Parser.simple" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:35Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:35Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup" kind="resource_setup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.declaration-4" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.definitions-3a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.definitions-3b" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.definitions-4a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.definitions-4b" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.initialization-2-2" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.lifetime-5a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.lifetime-5b" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.lifetime-5c" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.lifetime-7" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.lifetime-8" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.lifetime-9a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.lifetime-9b" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.linkage-6" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.linkage-7a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.linkage-7b" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.linkage-7c" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-1a" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-1b" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-3a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-3b" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-5" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-2a" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-2b" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-2c" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-3" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-4" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-5a" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-5b" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-6a" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.qualified-namespace-6b" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:45Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-0-2" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-1" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-2" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-3" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-4" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-class-1-5a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-namespace-1a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-namespace-1b" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.scope-namespace-1c" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.storage-auto-1" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.template-parameters-2" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.template-parameters-3" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.types-2" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.types-3" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.types-7" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-10" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-6a" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-6b" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-6c" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-6d" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-6e" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-7a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-7b" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-7c" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-7d" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-7e" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-7f" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-8a" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-8b" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-8c" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-8d" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-8e" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-8f" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.unqualified-8g" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.using-directive-1a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup.using-directive-2a" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:46Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Cxx.TypeAnalysis" kind="resource_setup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.TypeAnalysis.simple" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:53Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:53Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Parsers.C.simple" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:53Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:53Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Parsers.Cpp.include" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;incorrect output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:53Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:53Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.diff">
   &quot;&lt;pre&gt;---  
+++  
@@ -1,8 +1,8 @@
 &amp;lt;?xml version='1.0' encoding='ISO-8859-1'?&amp;gt;
 &amp;lt;ast&amp;gt;
  &amp;lt;declarations&amp;gt;
-  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Macro&quot; file=&quot;Parsers/Cpp/input/../include/header.hh&quot; language=&quot;C++&quot; line=&quot;3&quot; name=&quot;_header_hh&quot; text=&quot;&quot; type=&quot;macro&quot;/&amp;gt;
-  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Macro&quot; file=&quot;Parsers/Cpp/input/../include/header2.hh&quot; language=&quot;C++&quot; line=&quot;3&quot; name=&quot;_header2_hh&quot; text=&quot;&quot; type=&quot;macro&quot;/&amp;gt;
+  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Macro&quot; file=&quot;Parsers/Cpp/include/header.hh&quot; language=&quot;C++&quot; line=&quot;3&quot; name=&quot;_header_hh&quot; text=&quot;&quot; type=&quot;macro&quot;/&amp;gt;
+  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Macro&quot; file=&quot;Parsers/Cpp/include/header2.hh&quot; language=&quot;C++&quot; line=&quot;3&quot; name=&quot;_header2_hh&quot; text=&quot;&quot; type=&quot;macro&quot;/&amp;gt;
  &amp;lt;/declarations&amp;gt;
  &amp;lt;types&amp;gt;
   &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;_header2_hh&quot;&amp;gt;
@@ -13,11 +13,11 @@
   &amp;lt;/instance&amp;gt;
  &amp;lt;/types&amp;gt;
  &amp;lt;files&amp;gt;
-  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/include/header.hh&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/include/header.hh&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
    &amp;lt;includes&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot;&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot; name=&quot;&amp;amp;quot;header2.hh&amp;amp;quot;&quot;&amp;gt;
      &amp;lt;target&amp;gt;
-      &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/include/header2.hh&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+      &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/include/header2.hh&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
        &amp;lt;macro_calls/&amp;gt;
       &amp;lt;/instance&amp;gt;
      &amp;lt;/target&amp;gt;
@@ -27,17 +27,11 @@
   &amp;lt;/instance&amp;gt;
   &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/input/include.cc&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
    &amp;lt;includes&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot;&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot; name=&quot;&amp;amp;quot;../include/header.hh&amp;amp;quot;&quot;&amp;gt;
      &amp;lt;target/&amp;gt;
     &amp;lt;/instance&amp;gt;
    &amp;lt;/includes&amp;gt;
    &amp;lt;macro_calls/&amp;gt;
   &amp;lt;/instance&amp;gt;
-  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/input/../include/header.hh&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
-   &amp;lt;macro_calls/&amp;gt;
-  &amp;lt;/instance&amp;gt;
-  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/input/../include/header2.hh&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
-   &amp;lt;macro_calls/&amp;gt;
-  &amp;lt;/instance&amp;gt;
  &amp;lt;/files&amp;gt;
 &amp;lt;/ast&amp;gt;
&lt;/pre&gt;&quot;
  </annotation>
  <annotation name="synopsis_test.expected">
   &quot;&lt;pre&gt;&amp;lt;?xml version='1.0' encoding='ISO-8859-1'?&amp;gt;
&amp;lt;ast&amp;gt;
 &amp;lt;declarations&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Macro&quot; file=&quot;Parsers/Cpp/input/../include/header.hh&quot; language=&quot;C++&quot; line=&quot;3&quot; name=&quot;_header_hh&quot; text=&quot;&quot; type=&quot;macro&quot;/&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Macro&quot; file=&quot;Parsers/Cpp/input/../include/header2.hh&quot; language=&quot;C++&quot; line=&quot;3&quot; name=&quot;_header2_hh&quot; text=&quot;&quot; type=&quot;macro&quot;/&amp;gt;
 &amp;lt;/declarations&amp;gt;
 &amp;lt;types&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;_header2_hh&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;_header_hh&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/types&amp;gt;
 &amp;lt;files&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/include/header.hh&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;includes&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot;&amp;gt;
     &amp;lt;target&amp;gt;
      &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/include/header2.hh&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
       &amp;lt;macro_calls/&amp;gt;
      &amp;lt;/instance&amp;gt;
     &amp;lt;/target&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/includes&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/input/include.cc&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;includes&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot;&amp;gt;
     &amp;lt;target/&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/includes&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/input/../include/header.hh&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/input/../include/header2.hh&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/files&amp;gt;
&amp;lt;/ast&amp;gt;
&lt;/pre&gt;&quot;
  </annotation>
  <annotation name="synopsis_test.output">
   &quot;&lt;pre&gt;&amp;lt;?xml version='1.0' encoding='ISO-8859-1'?&amp;gt;
&amp;lt;ast&amp;gt;
 &amp;lt;declarations&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Macro&quot; file=&quot;Parsers/Cpp/include/header.hh&quot; language=&quot;C++&quot; line=&quot;3&quot; name=&quot;_header_hh&quot; text=&quot;&quot; type=&quot;macro&quot;/&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Macro&quot; file=&quot;Parsers/Cpp/include/header2.hh&quot; language=&quot;C++&quot; line=&quot;3&quot; name=&quot;_header2_hh&quot; text=&quot;&quot; type=&quot;macro&quot;/&amp;gt;
 &amp;lt;/declarations&amp;gt;
 &amp;lt;types&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;_header2_hh&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;_header_hh&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/types&amp;gt;
 &amp;lt;files&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/include/header.hh&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;includes&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot; name=&quot;&amp;amp;quot;header2.hh&amp;amp;quot;&quot;&amp;gt;
     &amp;lt;target&amp;gt;
      &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/include/header2.hh&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
       &amp;lt;macro_calls/&amp;gt;
      &amp;lt;/instance&amp;gt;
     &amp;lt;/target&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/includes&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cpp/input/include.cc&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;includes&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot; name=&quot;&amp;amp;quot;../include/header.hh&amp;amp;quot;&quot;&amp;gt;
     &amp;lt;target/&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/includes&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/files&amp;gt;
&amp;lt;/ast&amp;gt;
&lt;/pre&gt;&quot;
  </annotation>
 </result>
 <result id="Parsers.Cpp.macros" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:54Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:53Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cpp.simple" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:54Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:54Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.cast" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:55Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:54Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.comment_proximity" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:55Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:55Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.comments" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:55Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:55Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.condition" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:55Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:55Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.for" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:56Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:55Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.forward_class" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:56Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:56Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.func" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:56Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:56Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.func_ptr" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:56Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:56Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.func_template" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:57Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:56Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.func_template_arg" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:57Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:57Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.groups" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:57Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:57Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.groups2" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:57Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:57Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.if" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:58Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:57Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.koenig" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:58Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:58Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.macro" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:58Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:58Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.operator" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:32:58Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:58Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.std" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;incorrect output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:01Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:32:58Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.diff">
   &quot;&lt;pre&gt;---  
+++  
@@ -1,44 +1,308 @@
 &amp;lt;?xml version='1.0' encoding='ISO-8859-1'?&amp;gt;
 &amp;lt;ast&amp;gt;
  &amp;lt;declarations&amp;gt;
-  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;/usr/include/c++/3.2.2/bits/stl_bvector.h&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;std&quot; type=&quot;namespace&quot;&amp;gt;
+  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;std&quot; type=&quot;namespace&quot;&amp;gt;
    &amp;lt;comments&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/cstring
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // &amp;amp;lt;vector&amp;amp;gt; -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ *
+ * Copyright (c) 1994
+ * Hewlett-Packard Company
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Hewlett-Packard Company makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ *
+ *
+ * Copyright (c) 1996
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file vector
+ *  This is a Standard C++ Library header.  You should @c #include this header
+ *  in your programs, rather than any of the &amp;amp;quot;st[dl]_*.h&amp;amp;quot; implementation files.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Function-Based Exception Support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 19.1  Exception classes
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // -fno-exceptions Support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 19.1  Exception classes
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;40&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Else proceed normally.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;239&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /* Wide character type.
+   Locale-writers should change this as necessary to
+   be big enough to hold unique values not between 0 and 127,
+   and not (wchar_t) -1, for each defined multibyte character.  */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;244&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /* Define this type if we are doing the whole job,
+   or if we want this type in particular.  */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;280&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
+   instead of _WCHAR_T_, and _BSD_RUNE_T_ (which, unlike the other
+   symbols in the _FOO_T_ family, stays defined even after its
+   corresponding type is defined).  If we define wchar_t, then we
+   must undef _WCHAR_T_; for BSD/386 1.1 (and perhaps others), if
+   we undef _WCHAR_T_, then we must also define rune_t, since 
+   headers like runetype.h assume that if machine/ansi.h is included,
+   and _BSD_WCHAR_T_ is not defined, then rune_t is available.
+   machine/ansi.h says, &amp;amp;quot;Note that _WCHAR_T_ and _RUNE_T_ must be of
+   the same type.&amp;amp;quot; */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;307&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /* FreeBSD 5 can't be handled well using &amp;amp;quot;traditional&amp;amp;quot; logic above
+   since it no longer defines _BSD_RUNE_T_ yet still desires to export
+   rune_t in some cases... */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;359&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
+    are already defined.  */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;361&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;394&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /* A null pointer constant.  */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;412&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /* Offset of member MEMBER in a struct of type TYPE.  */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cstring&quot; line=&quot;53&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // Get rid of those macros defined in &amp;amp;lt;string.h&amp;amp;gt; in lieu of real functions.
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/cstdlib
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cstdlib&quot; line=&quot;54&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // Get rid of those macros defined in &amp;amp;lt;stdlib.h&amp;amp;gt; in lieu of real functions.
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/exception
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Exception Handling support header for -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/exception
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // The -*- C++ -*- dynamic memory management header.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 1994, 1996, 1997, 1998, 2000, 2001, 2002
 // Free Software Foundation
-//
-// This file is part of GNU CC.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;6&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This file is part of GNU CC.
 //
 // GNU CC is free software; you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
@@ -57,10 +321,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/exception
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;23&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -73,70 +334,47 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/exception
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file exception
- *  This header defines several types and functions relating to the
- *  handling of exceptions in a C++ program.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stringfwd.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // String support -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stringfwd.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
-//
-// This file is part of the GNU ISO C++ Library.  This library is free
-// software; you can redistribute it and/or modify it under the
-// terms of the GNU General Public License as published by the
-// Free Software Foundation; either version 2, or (at your option)
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;32&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file new
+ *  The header @c new defines several functions to manage dynamic memory and
+ *  handling memory allocation errors; see
+ *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Exception Handling support header for -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002
+// Free Software Foundation
+//
+// This file is part of GNU CC.
+//
+// GNU CC is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; either version 2, or (at your option)
 // any later version.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stringfwd.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // This library is distributed in the hope that it will be useful,
+// 
+// GNU CC is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 // GNU General Public License for more details.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stringfwd.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // You should have received a copy of the GNU General Public License along
-// with this library; see the file COPYING.  If not, write to the Free
-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
-// USA.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stringfwd.h
-     &amp;lt;/file&amp;gt;
+// 
+// You should have received a copy of the GNU General Public License
+// along with GNU CC; see the file COPYING.  If not, write to
+// the Free Software Foundation, 59 Temple Place - Suite 330,
+// Boston, MA 02111-1307, USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;23&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -149,54 +387,42 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stringfwd.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      //
-// ISO C++ 14882: 21 Strings library
-//
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stringfwd.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file stringfwd.h
- *  This is an internal header file, included by other library headers.
- *  You should not attempt to use it directly.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/cstdio
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Get rid of those macros defined in &amp;amp;lt;stdio.h&amp;amp;gt; in lieu of real functions.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/ctime
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // -*- C++ -*- forwarding header.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/ctime
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002
-// Free Software Foundation, Inc.
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;32&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file exception
+ *  This header defines several types and functions relating to the
+ *  handling of exceptions in a C++ program.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;116&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // extern &amp;amp;quot;C++&amp;amp;quot;
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/clocale&quot; line=&quot;51&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Get rid of those macros defined in &amp;amp;lt;locale.h&amp;amp;gt; in lieu of real functions.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cctype&quot; line=&quot;51&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Get rid of those macros defined in &amp;amp;lt;ctype.h&amp;amp;gt; in lieu of real functions.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // String support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -206,10 +432,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/ctime
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -218,10 +441,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/ctime
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
@@ -230,10 +450,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/ctime
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -246,76 +463,45 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/ctime
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       //
-// ISO C++ 14882: 20.5  Date and time
-//
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/ctime
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file ctime
- *  This is a Standard C++ Library file.  You should @c #include this file
- *  in your programs, rather than any of the &amp;amp;quot;*.h&amp;amp;quot; implementation files.
- *
- *  This is the C++ version of the Standard C Library header @c time.h,
- *  and its contents are (mostly) the same as that header, but are all
- *  contained in the namespace @c std.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/ctime
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Get rid of those macros defined in &amp;amp;lt;time.h&amp;amp;gt; in lieu of real functions.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/cwchar
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Need to do a bit of trickery here with mbstate_t as char_traits
-// assumes it is in wchar.h, regardless of wchar_t specializations.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/cwchar
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Get rid of those macros defined in &amp;amp;lt;wchar.h&amp;amp;gt; in lieu of real functions.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_pair.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Pair implementation -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_pair.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Copyright (C) 2001 Free Software Foundation, Inc.
+// ISO C++ 14882: 21 Strings library
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;34&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stringfwd.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cstdio&quot; line=&quot;54&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Get rid of those macros defined in &amp;amp;lt;stdio.h&amp;amp;gt; in lieu of real functions.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/gthr.h&quot; line=&quot;100&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /* Fallback to single thread definitions.  */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // -*- C++ -*- forwarding header.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003
+// Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -325,10 +511,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_pair.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;12&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -337,10 +520,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_pair.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;17&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
@@ -349,10 +529,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_pair.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;22&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -365,66 +542,37 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_pair.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /*
- *
- * Copyright (c) 1994
- * Hewlett-Packard Company
- *
- * Permission to use, copy, modify, distribute and sell this software
- * and its documentation for any purpose is hereby granted without fee,
- * provided that the above copyright notice appear in all copies and
- * that both that copyright notice and this permission notice appear
- * in supporting documentation.  Hewlett-Packard Company makes no
- * representations about the suitability of this software for any
- * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
- *
- *
- * Copyright (c) 1996,1997
- * Silicon Graphics Computer Systems, Inc.
- *
- * Permission to use, copy, modify, distribute and sell this software
- * and its documentation for any purpose is hereby granted without fee,
- * provided that the above copyright notice appear in all copies and
- * that both that copyright notice and this permission notice appear
- * in supporting documentation.  Silicon Graphics makes no
- * representations about the suitability of this software for any
- * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_pair.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file stl_pair.h
- *  This is an internal header file, included by other library headers.
- *  You should not attempt to use it directly.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Types used in iterator implementation -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;31&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 21.4
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;35&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file cwchar
+ *  This is a Standard C++ Library file.  You should @c #include this file
+ *  in your programs, rather than any of the &amp;amp;quot;*.h&amp;amp;quot; implementation files.
+ *
+ *  This is the C++ version of the Standard C Library header @c wchar.h,
+ *  and its contents are (mostly) the same as that header, but are all
+ *  contained in the namespace @c std.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // -*- C++ -*- forwarding header.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002
+// Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -434,10 +582,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;12&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -446,10 +591,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;17&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
@@ -458,10 +600,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;22&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -474,80 +613,61 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /*
- *
- * Copyright (c) 1994
- * Hewlett-Packard Company
- *
- * Permission to use, copy, modify, distribute and sell this software
- * and its documentation for any purpose is hereby granted without fee,
- * provided that the above copyright notice appear in all copies and
- * that both that copyright notice and this permission notice appear
- * in supporting documentation.  Hewlett-Packard Company makes no
- * representations about the suitability of this software for any
- * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
- *
- *
- * Copyright (c) 1996-1998
- * Silicon Graphics Computer Systems, Inc.
- *
- * Permission to use, copy, modify, distribute and sell this software
- * and its documentation for any purpose is hereby granted without fee,
- * provided that the above copyright notice appear in all copies and
- * that both that copyright notice and this permission notice appear
- * in supporting documentation.  Silicon Graphics makes no
- * representations about the suitability of this software for any
- * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file stl_iterator_base_types.h
- *  This is an internal header file, included by other library headers.
- *  You should not attempt to use it directly.
- *
- *  This file contains all of the general iterator-related utility types,
- *  such as iterator_traits and struct iterator.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;0&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator_base_funcs.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Since this entire file is within namespace std, there's no reason to
-// waste two spaces along the left column.  Thus the leading indentation is
-// slightly violated from here on.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Iterators -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;31&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 20.5  Date and time
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;35&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file ctime
+ *  This is a Standard C++ Library file.  You should @c #include this file
+ *  in your programs, rather than any of the &amp;amp;quot;*.h&amp;amp;quot; implementation files.
+ *
+ *  This is the C++ version of the Standard C Library header @c time.h,
+ *  and its contents are (mostly) the same as that header, but are all
+ *  contained in the namespace @c std.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;53&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Get rid of those macros defined in &amp;amp;lt;time.h&amp;amp;gt; in lieu of real functions.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;57&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Need to do a bit of trickery here with mbstate_t as char_traits
+// assumes it is in wchar.h, regardless of wchar_t specializations.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;74&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Get rid of those macros defined in &amp;amp;lt;wchar.h&amp;amp;gt; in lieu of real functions.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/fpos.h&quot; line=&quot;125&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Function-Based Exception Support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -557,10 +677,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -569,10 +686,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
@@ -581,10 +695,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -597,68 +708,21 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /*
- *
- * Copyright (c) 1994
- * Hewlett-Packard Company
- *
- * Permission to use, copy, modify, distribute and sell this software
- * and its documentation for any purpose is hereby granted without fee,
- * provided that the above copyright notice appear in all copies and
- * that both that copyright notice and this permission notice appear
- * in supporting documentation.  Hewlett-Packard Company makes no
- * representations about the suitability of this software for any
- * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
- *
- *
- * Copyright (c) 1996-1998
- * Silicon Graphics Computer Systems, Inc.
- *
- * Permission to use, copy, modify, distribute and sell this software
- * and its documentation for any purpose is hereby granted without fee,
- * provided that the above copyright notice appear in all copies and
- * that both that copyright notice and this permission notice appear
- * in supporting documentation.  Silicon Graphics makes no
- * representations about the suitability of this software for any
- * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file stl_iterator.h
- *  This is an internal header file, included by other library headers.
- *  You should not attempt to use it directly.
- *
- *  This file implements reverse_iterator, back_insert_iterator,
- *  front_insert_iterator, insert_iterator, __normal_iterator, and their
- *  supporting functions and overloaded operators.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_threads.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Threading support -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_threads.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 19.1  Exception classes
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // -fno-exceptions Support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // Copyright (C) 2001 Free Software Foundation, Inc.
 //
@@ -670,10 +734,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_threads.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -682,10 +743,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_threads.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
@@ -694,10 +752,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_threads.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -710,62 +765,41 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_threads.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /*
- * Copyright (c) 1997-1999
- * Silicon Graphics Computer Systems, Inc.
- *
- * Permission to use, copy, modify, distribute and sell this software
- * and its documentation for any purpose is hereby granted without fee,
- * provided that the above copyright notice appear in all copies and
- * that both that copyright notice and this permission notice appear
- * in supporting documentation.  Silicon Graphics makes no
- * representations about the suitability of this software for any
- * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_threads.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file stl_threads.h
- *  This is an internal header file, included by other library headers.
- *  You should not attempt to use it directly.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_threads.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // The only supported threading model is GCC's own gthr.h abstraction layer.
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_construct.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // nonstandard construct and destroy functions -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_construct.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 19.1  Exception classes
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;40&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Else proceed normally.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;84&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/iosfwd&quot; line=&quot;166&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Pair implementation -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -775,10 +809,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_construct.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -787,10 +818,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_construct.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
@@ -799,10 +827,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_construct.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -815,10 +840,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_construct.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       /*
  *
@@ -848,33 +870,32 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_construct.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file stl_construct.h
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_pair.h
  *  This is an internal header file, included by other library headers.
  *  You should not attempt to use it directly.
  */
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Raw memory manipulators -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // Copyright (C) 2001 Free Software Foundation, Inc.
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/type_traits.h&quot; line=&quot;337&quot; suspect=&quot;0&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Local Variables:
+// mode:C++
+// End:
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Types used in iterator implementation -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
 //
 // This file is part of the GNU ISO C++ Library.  This library is free
 // software; you can redistribute it and/or modify it under the
@@ -884,10 +905,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -896,10 +914,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
@@ -908,10 +923,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -924,10 +936,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       /*
  *
@@ -943,7 +952,7 @@
  * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
  *
  *
- * Copyright (c) 1996,1997
+ * Copyright (c) 1996-1998
  * Silicon Graphics Computer Systems, Inc.
  *
  * Permission to use, copy, modify, distribute and sell this software
@@ -957,31 +966,31 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      /** @file stl_uninitialized.h
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_iterator_base_types.h
  *  This is an internal header file, included by other library headers.
  *  You should not attempt to use it directly.
- */
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
-     &amp;lt;text&amp;gt;
-      // bit_vector and vector&amp;amp;lt;bool&amp;amp;gt; specialization -*- C++ -*-
-
-     &amp;lt;/text&amp;gt;
-    &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
+ *
+ *  This file contains all of the general iterator-related utility types,
+ *  such as iterator_traits and struct iterator.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;162&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Functions used by iterators -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
 //
@@ -993,10 +1002,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // This library is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
@@ -1005,10 +1011,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // You should have received a copy of the GNU General Public License along
 // with this library; see the file COPYING.  If not, write to the Free
@@ -1017,10 +1020,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // As a special exception, you may use this file as part of a free software
 // library without restriction.  Specifically, if other files instantiate
@@ -1033,10 +1033,7 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       /*
  *
@@ -1052,7 +1049,7 @@
  * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
  *
  *
- * Copyright (c) 1996-1999
+ * Copyright (c) 1996-1998
  * Silicon Graphics Computer Systems, Inc.
  *
  * Permission to use, copy, modify, distribute and sell this software
@@ -1066,10 +1063,1067 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_iterator_base_funcs.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ *
+ *  This file contains all of the general iterator-related utility
+ *  functions, such as distance() and advance().
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Concept-checking control -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file concept_check.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;42&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // All places in libstdc++-v3 where these are used, or /might/ be used, or
+// don't need to be used, or perhaps /should/ be used, are commented with
+// &amp;amp;quot;concept requirements&amp;amp;quot; (and maybe some more text).  So grep like crazy
+// if you're looking for additional places to use these.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;47&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Concept-checking code is off by default unless users turn it on via
+// configure options or editing c++config.h.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;169&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Iterators -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ *
+ * Copyright (c) 1994
+ * Hewlett-Packard Company
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Hewlett-Packard Company makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ *
+ *
+ * Copyright (c) 1996-1998
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_iterator.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ *
+ *  This file implements reverse_iterator, back_insert_iterator,
+ *  front_insert_iterator, insert_iterator, __normal_iterator, and their
+ *  supporting functions and overloaded operators.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;739&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace __gnu_cxx
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;743&quot; suspect=&quot;0&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Local Variables:
+// mode:C++
+// End:
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_algobase.h&quot; line=&quot;814&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_algobase.h&quot; line=&quot;818&quot; suspect=&quot;0&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Local Variables:
+// mode:C++
+// End:
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Allocators -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ * Copyright (c) 1996-1997
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;43&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_alloc.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;51&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /**
+ *  @defgroup Allocators Memory Allocators
+ *  @if maint
+ *  stl_alloc.h implements some node allocators.  These are NOT the same as
+ *  allocators in the C++ standard, nor in the original H-P STL.  They do not
+ *  encapsulate different pointer types; we assume that there is only one
+ *  pointer type.  The C++ standard allocators are intended to allocate
+ *  individual objects, not pools or arenas.
+ *
+ *  In this file allocators are of two different styles:  &amp;amp;quot;standard&amp;amp;quot; and
+ *  &amp;amp;quot;SGI&amp;amp;quot; (quotes included).  &amp;amp;quot;Standard&amp;amp;quot; allocators conform to 20.4.  &amp;amp;quot;SGI&amp;amp;quot;
+ *  allocators differ in AT LEAST the following ways (add to this list as you
+ *  discover them):
+ *
+ *   - &amp;amp;quot;Standard&amp;amp;quot; allocate() takes two parameters (n_count,hint=0) but &amp;amp;quot;SGI&amp;amp;quot;
+ *     allocate() takes one paramter (n_size).
+ *   - Likewise, &amp;amp;quot;standard&amp;amp;quot; deallocate()'s argument is a count, but in &amp;amp;quot;SGI&amp;amp;quot;
+ *     is a byte size.
+ *   - max_size(), construct(), and destroy() are missing in &amp;amp;quot;SGI&amp;amp;quot; allocators.
+ *   - reallocate(p,oldsz,newsz) is added in &amp;amp;quot;SGI&amp;amp;quot;, and behaves as
+ *     if p=realloc(p,newsz).
+ *
+ *  &amp;amp;quot;SGI&amp;amp;quot; allocators may be wrapped in __allocator to convert the interface
+ *  into a &amp;amp;quot;standard&amp;amp;quot; one.
+ *  @endif
+ *
+ *  @note The @c reallocate member functions have been deprecated for 3.2
+ *        and will be removed in 3.4.  You must define @c _GLIBCPP_DEPRECATED
+ *        to make this visible in 3.2; see c++config.h.
+ *
+ *  The canonical description of these classes is in docs/html/ext/howto.html
+ *  or online at http://gcc.gnu.org/onlinedocs/libstdc++/ext/howto.html#3
+*/
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Function-Based Exception Support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 19.1  Exception classes
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // -fno-exceptions Support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 19.1  Exception classes
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;40&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Else proceed normally.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;84&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Threading support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ * Copyright (c) 1997-1999
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;43&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_threads.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;51&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // The only supported threading model is GCC's own gthr.h abstraction layer.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;129&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;131&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Locking class.  Note that this class *does not have a
+  // constructor*.  It must be initialized either statically, with
+  // __STL_MUTEX_INITIALIZER, or dynamically, by explicitly calling
+  // the _M_initialize member function.  (This is similar to the ways
+  // that a pthreads mutex can be initialized.)  There are explicit
+  // member functions for acquiring and releasing the lock.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;138&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // There is no constructor because static initialization is
+  // essential for some uses, and only a class aggregate (see section
+  // 8.5.1 of the C++ standard) can be initialized that way.  That
+  // means we must have no constructors, no base classes, no virtual
+  // functions, and no private or protected members.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;972&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // nonstandard construct and destroy functions -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ *
+ * Copyright (c) 1994
+ * Hewlett-Packard Company
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Hewlett-Packard Company makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ *
+ *
+ * Copyright (c) 1996,1997
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_construct.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;145&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Raw memory manipulators -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ *
+ * Copyright (c) 1994
+ * Hewlett-Packard Company
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Hewlett-Packard Company makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ *
+ *
+ * Copyright (c) 1996,1997
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_uninitialized.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;284&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;288&quot; suspect=&quot;0&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Local Variables:
+// mode:C++
+// End:
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Vector implementation -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ *
+ * Copyright (c) 1994
+ * Hewlett-Packard Company
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Hewlett-Packard Company makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ *
+ *
+ * Copyright (c) 1996
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this  software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file stl_vector.h
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Function-Based Exception Support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 19.1  Exception classes
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // -fno-exceptions Support -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      //
+// ISO C++ 14882: 19.1  Exception classes
+//
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;40&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Else proceed normally.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;84&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;990&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // bit_vector and vector&amp;amp;lt;bool&amp;amp;gt; specialization -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ *
+ * Copyright (c) 1994
+ * Hewlett-Packard Company
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Hewlett-Packard Company makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ *
+ *
+ * Copyright (c) 1996-1999
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       /** @file stl_bvector.h
  *  This is an internal header file, included by other library headers.
@@ -1078,50 +2132,137 @@
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;337&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // namespace std
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_bvector.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;339&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // Declare a partial specialization of vector&amp;amp;lt;T, Alloc&amp;amp;gt;.
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;723&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std 
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;727&quot; suspect=&quot;0&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Local Variables:
+// mode:C++
+// End:
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Vector implementation (out of line) -*- C++ -*-
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
+//
+// This file is part of the GNU ISO C++ Library.  This library is free
+// software; you can redistribute it and/or modify it under the
+// terms of the GNU General Public License as published by the
+// Free Software Foundation; either version 2, or (at your option)
+// any later version.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // This library is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // You should have received a copy of the GNU General Public License along
+// with this library; see the file COPYING.  If not, write to the Free
+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
+// USA.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // As a special exception, you may use this file as part of a free software
+// library without restriction.  Specifically, if other files instantiate
+// templates or use macros or inline functions from this file, or you compile
+// this file and link it with other files to produce an executable, this
+// file does not by itself cause the resulting executable to be covered by
+// the GNU General Public License.  This exception does not however
+// invalidate any other reasons why the executable file might be covered by
+// the GNU General Public License.
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /*
+ *
+ * Copyright (c) 1994
+ * Hewlett-Packard Company
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Hewlett-Packard Company makes no
+ * representations about the suitability of this software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ *
+ *
+ * Copyright (c) 1996
+ * Silicon Graphics Computer Systems, Inc.
+ *
+ * Permission to use, copy, modify, distribute and sell this software
+ * and its documentation for any purpose is hereby granted without fee,
+ * provided that the above copyright notice appear in all copies and
+ * that both that copyright notice and this permission notice appear
+ * in supporting documentation.  Silicon Graphics makes no
+ * representations about the suitability of this  software for any
+ * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      /** @file vector.tcc
+ *  This is an internal header file, included by other library headers.
+ *  You should not attempt to use it directly.
+ */
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
    &amp;lt;/comments&amp;gt;
   &amp;lt;/instance&amp;gt;
-  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;/usr/include/c++/3.2.2/bits/stl_iterator.h&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;__gnu_cxx&quot; type=&quot;namespace&quot;&amp;gt;
+  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;__gnu_cxx&quot; type=&quot;namespace&quot;&amp;gt;
    &amp;lt;comments&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/exception
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;101&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // namespace std
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;0&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/type_traits.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/type_traits.h&quot; line=&quot;324&quot; suspect=&quot;0&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // Forward declaration hack, should really include this from somewhere.
 
      &amp;lt;/text&amp;gt;
     &amp;lt;/instance&amp;gt;
-    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
-     &amp;lt;file&amp;gt;
-      /usr/include/c++/3.2.2/bits/stl_iterator.h
-     &amp;lt;/file&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;557&quot; suspect=&quot;1&quot;&amp;gt;
      &amp;lt;text&amp;gt;
       // namespace std
 
@@ -1130,6 +2271,14 @@
    &amp;lt;/comments&amp;gt;
   &amp;lt;/instance&amp;gt;
   &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;Parsers/Cxx/input/std.cc&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;Foo&quot; type=&quot;namespace&quot;&amp;gt;
+   &amp;lt;comments&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;435&quot; suspect=&quot;1&quot;&amp;gt;
+     &amp;lt;text&amp;gt;
+      // namespace std
+
+     &amp;lt;/text&amp;gt;
+    &amp;lt;/instance&amp;gt;
+   &amp;lt;/comments&amp;gt;
    &amp;lt;declarations&amp;gt;
     &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Function&quot; file=&quot;Parsers/Cxx/input/std.cc&quot; language=&quot;C++&quot; line=&quot;5&quot; name=&quot;Foo.func(std::vector&amp;amp;lt;int&amp;amp;gt;)&quot; realname=&quot;func&quot; type=&quot;function&quot;&amp;gt;
      &amp;lt;parameters&amp;gt;
@@ -1181,254 +2330,281 @@
   &amp;lt;/instance&amp;gt;
  &amp;lt;/types&amp;gt;
  &amp;lt;files&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_iterator_base_funcs.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/i386-redhat-linux/bits/c++config.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/cstddef
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/fpos.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_alloc.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/sigthread.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/xlocale.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_bvector.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/sigset.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/xopen_lim.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/local_lim.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/exception
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/sys/sysmacros.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/iosfwd
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/_G_config.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_threads.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_construct.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/signal.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/sys/cdefs.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/i386-redhat-linux/bits/gthr-default.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_uninitialized.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/new
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/posix2_lim.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/lib/gcc-lib/i386-redhat-linux/3.2.2/include/stddef.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/string.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/i386-redhat-linux/bits/atomicity.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/stdlib.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/cstdlib
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/i386-redhat-linux/bits/c++io.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/gnu/stubs.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/functexcept.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/waitflags.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/i386-redhat-linux/bits/gthr.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/waitstatus.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/endian.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/limits.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_vector.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stringfwd.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/posix1_lim.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/typesizes.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/sched.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/pthread.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_iterator.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/wchar.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/climits
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/libio.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_algobase.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/wchar.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/features.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/sys_errlist.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/pthreadtypes.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/exception_defines.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/select.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/alloca.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/ctime
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/types.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/cwchar
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/cassert
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/stdio_lim.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/initspin.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/lib/gcc-lib/i386-redhat-linux/3.2.2/include/stdarg.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   Parsers/Cxx/input/std.cc
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/time.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/time.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/linux/limits.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/assert.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/i386-redhat-linux/bits/os_defines.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/lib/gcc-lib/i386-redhat-linux/3.2.2/include/limits.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/gconv.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/sys/types.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/type_traits.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/concept_check.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/endian.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/sched.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/bits/wordsize.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/vector
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/sys/select.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/cstdio
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/bits/stl_pair.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/c++/3.2.2/cstring
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/include/stdio.h
-  &amp;lt;/file&amp;gt;
-  &amp;lt;file&amp;gt;
-   /usr/lib/gcc-lib/i386-redhat-linux/3.2.2/include/syslimits.h
-  &amp;lt;/file&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/locale.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/unistd.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sys/sysmacros.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/locale.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/_G_config.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/posix2_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/stdlib.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/gnu/stubs.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/gconv.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/iosfwd&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/bits/sigthread.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stdio.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/vector&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/endian.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/environments.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sys/types.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/wordsize.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stdarg.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/atomicity.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/clocale&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/c++io.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/xopen_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/wchar.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/new&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/limits.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/waitstatus.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/posix1_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/typesizes.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/sched.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/posix_opt.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/features.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/confname.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/exception&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cstdio&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/libio.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/local_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cstddef&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/signal.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/c++config.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/xlocale.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/ctype.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/gthr.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/fpos.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cstring&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sys/cdefs.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cstdlib&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/pthreadtypes.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/time.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/select.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/alloca.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/stdio_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cxx/input/std.cc&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;declarations/&amp;gt;
+   &amp;lt;includes&amp;gt;
+    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot; name=&quot;&amp;amp;lt;vector&amp;amp;gt;&quot;&amp;gt;
+     &amp;lt;target/&amp;gt;
+    &amp;lt;/instance&amp;gt;
+   &amp;lt;/includes&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_algobase.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/c++locale.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/pthread.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/gthr-default.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/syslimits.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/sigset.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/os_defines.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sched.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/waitflags.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/string.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/limits.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/climits&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/wchar.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/type_traits.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sys/select.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/types.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/getopt.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/time.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cctype&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
+  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/endian.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
+   &amp;lt;macro_calls/&amp;gt;
+  &amp;lt;/instance&amp;gt;
  &amp;lt;/files&amp;gt;
 &amp;lt;/ast&amp;gt;
&lt;/pre&gt;&quot;
  </annotation>
  <annotation name="synopsis_test.expected">
   &quot;&lt;pre&gt;&amp;lt;?xml version='1.0' encoding='ISO-8859-1'?&amp;gt;
&amp;lt;ast&amp;gt;
 &amp;lt;declarations&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;/usr/include/c++/3.2.2/bits/stl_bvector.h&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;std&quot; type=&quot;namespace&quot;&amp;gt;
   &amp;lt;comments&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/cstring
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;string.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/cstdlib
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;stdlib.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/exception
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Exception Handling support header for -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/exception
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002
// Free Software Foundation
//
// This file is part of GNU CC.
//
// GNU CC is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2, or (at your option)
// any later version.
// 
// GNU CC is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with GNU CC; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/exception
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/exception
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file exception
 *  This header defines several types and functions relating to the
 *  handling of exceptions in a C++ program.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stringfwd.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // String support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stringfwd.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stringfwd.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stringfwd.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stringfwd.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stringfwd.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 21 Strings library
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stringfwd.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stringfwd.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/cstdio
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;stdio.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/ctime
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // -*- C++ -*- forwarding header.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/ctime
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002
// Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/ctime
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/ctime
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/ctime
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/ctime
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 20.5  Date and time
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/ctime
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file ctime
 *  This is a Standard C++ Library file.  You should @c #include this file
 *  in your programs, rather than any of the &amp;amp;quot;*.h&amp;amp;quot; implementation files.
 *
 *  This is the C++ version of the Standard C Library header @c time.h,
 *  and its contents are (mostly) the same as that header, but are all
 *  contained in the namespace @c std.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/ctime
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;time.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/cwchar
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Need to do a bit of trickery here with mbstate_t as char_traits
// assumes it is in wchar.h, regardless of wchar_t specializations.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/cwchar
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;wchar.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_pair.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Pair implementation -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_pair.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_pair.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_pair.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_pair.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_pair.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996,1997
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_pair.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_pair.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Types used in iterator implementation -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996-1998
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_iterator_base_types.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 *
 *  This file contains all of the general iterator-related utility types,
 *  such as iterator_traits and struct iterator.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;0&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator_base_funcs.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Since this entire file is within namespace std, there's no reason to
// waste two spaces along the left column.  Thus the leading indentation is
// slightly violated from here on.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Iterators -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996-1998
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_iterator.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 *
 *  This file implements reverse_iterator, back_insert_iterator,
 *  front_insert_iterator, insert_iterator, __normal_iterator, and their
 *  supporting functions and overloaded operators.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_threads.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Threading support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_threads.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_threads.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_threads.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_threads.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_threads.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 * Copyright (c) 1997-1999
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_threads.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_threads.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_threads.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // The only supported threading model is GCC's own gthr.h abstraction layer.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_construct.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // nonstandard construct and destroy functions -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_construct.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_construct.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_construct.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_construct.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_construct.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996,1997
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_construct.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_construct.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Raw memory manipulators -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996,1997
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_uninitialized.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_uninitialized.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // bit_vector and vector&amp;amp;lt;bool&amp;amp;gt; specialization -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996-1999
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_bvector.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_bvector.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Declare a partial specialization of vector&amp;amp;lt;T, Alloc&amp;amp;gt;.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/comments&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;/usr/include/c++/3.2.2/bits/stl_iterator.h&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;__gnu_cxx&quot; type=&quot;namespace&quot;&amp;gt;
   &amp;lt;comments&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/exception
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;0&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/type_traits.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // Forward declaration hack, should really include this from somewhere.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; line=&quot;0&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;file&amp;gt;
      /usr/include/c++/3.2.2/bits/stl_iterator.h
     &amp;lt;/file&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/comments&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;Parsers/Cxx/input/std.cc&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;Foo&quot; type=&quot;namespace&quot;&amp;gt;
   &amp;lt;declarations&amp;gt;
    &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Function&quot; file=&quot;Parsers/Cxx/input/std.cc&quot; language=&quot;C++&quot; line=&quot;5&quot; name=&quot;Foo.func(std::vector&amp;amp;lt;int&amp;amp;gt;)&quot; realname=&quot;func&quot; type=&quot;function&quot;&amp;gt;
     &amp;lt;parameters&amp;gt;
      &amp;lt;instance class=&quot;Synopsis.AST.Parameter&quot; identifier=&quot;array&quot; value=&quot;&quot;&amp;gt;
       &amp;lt;type&amp;gt;
        &amp;lt;instance class=&quot;Synopsis.Type.Parametrized&quot; language=&quot;C++&quot;&amp;gt;
         &amp;lt;parameters&amp;gt;
          &amp;lt;instance class=&quot;Synopsis.Type.Base&quot; language=&quot;C++&quot; name=&quot;int&quot;/&amp;gt;
         &amp;lt;/parameters&amp;gt;
         &amp;lt;template&amp;gt;
          &amp;lt;instance class=&quot;Synopsis.Type.Unknown&quot; language=&quot;C++&quot; name=&quot;std.vector&quot;&amp;gt;
           &amp;lt;link&amp;gt;
            std
            vector
           &amp;lt;/link&amp;gt;
          &amp;lt;/instance&amp;gt;
         &amp;lt;/template&amp;gt;
        &amp;lt;/instance&amp;gt;
       &amp;lt;/type&amp;gt;
      &amp;lt;/instance&amp;gt;
     &amp;lt;/parameters&amp;gt;
     &amp;lt;returnType&amp;gt;
      &amp;lt;instance class=&quot;Synopsis.Type.Base&quot; language=&quot;C++&quot; name=&quot;void&quot;/&amp;gt;
     &amp;lt;/returnType&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Builtin&quot; file=&quot;Parsers/Cxx/input/std.cc&quot; language=&quot;C++&quot; line=&quot;5&quot; name=&quot;EOS&quot; type=&quot;EOS&quot;/&amp;gt;
   &amp;lt;/declarations&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/declarations&amp;gt;
 &amp;lt;types&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Unknown&quot; language=&quot;C++&quot; name=&quot;__gnu_cxx&quot;&amp;gt;
   &amp;lt;link&amp;gt;
    __gnu_cxx
   &amp;lt;/link&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Unknown&quot; language=&quot;C++&quot; name=&quot;std&quot;&amp;gt;
   &amp;lt;link&amp;gt;
    std
   &amp;lt;/link&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;EOS&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;Foo&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;Foo.func(std::vector&amp;amp;lt;int&amp;amp;gt;)&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/types&amp;gt;
 &amp;lt;files&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_iterator_base_funcs.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/i386-redhat-linux/bits/c++config.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/cstddef
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/fpos.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_alloc.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/sigthread.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/xlocale.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_bvector.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/sigset.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/xopen_lim.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/local_lim.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/exception
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/sys/sysmacros.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/iosfwd
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/_G_config.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_threads.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_construct.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/signal.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/sys/cdefs.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/i386-redhat-linux/bits/gthr-default.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_uninitialized.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/new
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/posix2_lim.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/lib/gcc-lib/i386-redhat-linux/3.2.2/include/stddef.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/string.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/i386-redhat-linux/bits/atomicity.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/stdlib.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/cstdlib
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/i386-redhat-linux/bits/c++io.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/gnu/stubs.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/functexcept.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/waitflags.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/i386-redhat-linux/bits/gthr.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/waitstatus.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/endian.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/limits.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_vector.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stringfwd.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/posix1_lim.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/typesizes.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/sched.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/pthread.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_iterator.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/wchar.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/climits
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/libio.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_algobase.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/wchar.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/features.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/sys_errlist.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/pthreadtypes.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/exception_defines.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/select.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/alloca.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/ctime
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/types.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/cwchar
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/cassert
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/stdio_lim.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/initspin.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/lib/gcc-lib/i386-redhat-linux/3.2.2/include/stdarg.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   Parsers/Cxx/input/std.cc
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/time.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/time.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/linux/limits.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/assert.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/i386-redhat-linux/bits/os_defines.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/lib/gcc-lib/i386-redhat-linux/3.2.2/include/limits.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/gconv.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/sys/types.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/type_traits.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/concept_check.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/endian.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/sched.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/bits/wordsize.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/vector
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/sys/select.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/cstdio
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_iterator_base_types.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/bits/stl_pair.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/c++/3.2.2/cstring
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/include/stdio.h
  &amp;lt;/file&amp;gt;
  &amp;lt;file&amp;gt;
   /usr/lib/gcc-lib/i386-redhat-linux/3.2.2/include/syslimits.h
  &amp;lt;/file&amp;gt;
 &amp;lt;/files&amp;gt;
&amp;lt;/ast&amp;gt;
&lt;/pre&gt;&quot;
  </annotation>
  <annotation name="synopsis_test.output">
   &quot;&lt;pre&gt;&amp;lt;?xml version='1.0' encoding='ISO-8859-1'?&amp;gt;
&amp;lt;ast&amp;gt;
 &amp;lt;declarations&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;std&quot; type=&quot;namespace&quot;&amp;gt;
   &amp;lt;comments&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // &amp;amp;lt;vector&amp;amp;gt; -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/vector&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file vector
 *  This is a Standard C++ Library header.  You should @c #include this header
 *  in your programs, rather than any of the &amp;amp;quot;st[dl]_*.h&amp;amp;quot; implementation files.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Function-Based Exception Support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 19.1  Exception classes
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // -fno-exceptions Support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 19.1  Exception classes
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;40&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Else proceed normally.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;239&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /* Wide character type.
   Locale-writers should change this as necessary to
   be big enough to hold unique values not between 0 and 127,
   and not (wchar_t) -1, for each defined multibyte character.  */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;244&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /* Define this type if we are doing the whole job,
   or if we want this type in particular.  */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;280&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /* On BSD/386 1.1, at least, machine/ansi.h defines _BSD_WCHAR_T_
   instead of _WCHAR_T_, and _BSD_RUNE_T_ (which, unlike the other
   symbols in the _FOO_T_ family, stays defined even after its
   corresponding type is defined).  If we define wchar_t, then we
   must undef _WCHAR_T_; for BSD/386 1.1 (and perhaps others), if
   we undef _WCHAR_T_, then we must also define rune_t, since 
   headers like runetype.h assume that if machine/ansi.h is included,
   and _BSD_WCHAR_T_ is not defined, then rune_t is available.
   machine/ansi.h says, &amp;amp;quot;Note that _WCHAR_T_ and _RUNE_T_ must be of
   the same type.&amp;amp;quot; */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;307&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /* FreeBSD 5 can't be handled well using &amp;amp;quot;traditional&amp;amp;quot; logic above
   since it no longer defines _BSD_RUNE_T_ yet still desires to export
   rune_t in some cases... */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;359&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*  In 4.3bsd-net2, leave these undefined to indicate that size_t, etc.
    are already defined.  */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;361&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*  BSD/OS 3.1 and FreeBSD [23].x require the MACHINE_ANSI_H check here.  */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;394&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /* A null pointer constant.  */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; line=&quot;412&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /* Offset of member MEMBER in a struct of type TYPE.  */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cstring&quot; line=&quot;53&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;string.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cstdlib&quot; line=&quot;54&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;stdlib.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // The -*- C++ -*- dynamic memory management header.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 1994, 1996, 1997, 1998, 2000, 2001, 2002
// Free Software Foundation

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;6&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This file is part of GNU CC.
//
// GNU CC is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2, or (at your option)
// any later version.
// 
// GNU CC is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with GNU CC; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;23&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/new&quot; line=&quot;32&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file new
 *  The header @c new defines several functions to manage dynamic memory and
 *  handling memory allocation errors; see
 *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Exception Handling support header for -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002
// Free Software Foundation
//
// This file is part of GNU CC.
//
// GNU CC is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2, or (at your option)
// any later version.
// 
// GNU CC is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with GNU CC; see the file COPYING.  If not, write to
// the Free Software Foundation, 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;23&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;32&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file exception
 *  This header defines several types and functions relating to the
 *  handling of exceptions in a C++ program.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;116&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // extern &amp;amp;quot;C++&amp;amp;quot;

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/clocale&quot; line=&quot;51&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;locale.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cctype&quot; line=&quot;51&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;ctype.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // String support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 21 Strings library
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; line=&quot;34&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stringfwd.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cstdio&quot; line=&quot;54&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;stdio.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/gthr.h&quot; line=&quot;100&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /* Fallback to single thread definitions.  */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // -*- C++ -*- forwarding header.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003
// Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;12&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;17&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;22&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;31&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 21.4
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;35&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file cwchar
 *  This is a Standard C++ Library file.  You should @c #include this file
 *  in your programs, rather than any of the &amp;amp;quot;*.h&amp;amp;quot; implementation files.
 *
 *  This is the C++ version of the Standard C Library header @c wchar.h,
 *  and its contents are (mostly) the same as that header, but are all
 *  contained in the namespace @c std.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // -*- C++ -*- forwarding header.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002
// Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;12&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;17&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;22&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;31&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 20.5  Date and time
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;35&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file ctime
 *  This is a Standard C++ Library file.  You should @c #include this file
 *  in your programs, rather than any of the &amp;amp;quot;*.h&amp;amp;quot; implementation files.
 *
 *  This is the C++ version of the Standard C Library header @c time.h,
 *  and its contents are (mostly) the same as that header, but are all
 *  contained in the namespace @c std.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; line=&quot;53&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;time.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;57&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Need to do a bit of trickery here with mbstate_t as char_traits
// assumes it is in wchar.h, regardless of wchar_t specializations.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; line=&quot;74&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Get rid of those macros defined in &amp;amp;lt;wchar.h&amp;amp;gt; in lieu of real functions.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/fpos.h&quot; line=&quot;125&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Function-Based Exception Support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 19.1  Exception classes
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // -fno-exceptions Support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 19.1  Exception classes
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;40&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Else proceed normally.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;84&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/iosfwd&quot; line=&quot;166&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Pair implementation -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996,1997
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_pair.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/type_traits.h&quot; line=&quot;337&quot; suspect=&quot;0&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Local Variables:
// mode:C++
// End:

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Types used in iterator implementation -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996-1998
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_iterator_base_types.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 *
 *  This file contains all of the general iterator-related utility types,
 *  such as iterator_traits and struct iterator.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; line=&quot;162&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Functions used by iterators -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996-1998
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_iterator_base_funcs.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 *
 *  This file contains all of the general iterator-related utility
 *  functions, such as distance() and advance().
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Concept-checking control -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file concept_check.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;42&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // All places in libstdc++-v3 where these are used, or /might/ be used, or
// don't need to be used, or perhaps /should/ be used, are commented with
// &amp;amp;quot;concept requirements&amp;amp;quot; (and maybe some more text).  So grep like crazy
// if you're looking for additional places to use these.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; line=&quot;47&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Concept-checking code is off by default unless users turn it on via
// configure options or editing c++config.h.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; line=&quot;169&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Iterators -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996-1998
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_iterator.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 *
 *  This file implements reverse_iterator, back_insert_iterator,
 *  front_insert_iterator, insert_iterator, __normal_iterator, and their
 *  supporting functions and overloaded operators.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;739&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace __gnu_cxx

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;743&quot; suspect=&quot;0&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Local Variables:
// mode:C++
// End:

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_algobase.h&quot; line=&quot;814&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_algobase.h&quot; line=&quot;818&quot; suspect=&quot;0&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Local Variables:
// mode:C++
// End:

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Allocators -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002, 2003 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 * Copyright (c) 1996-1997
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;43&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_alloc.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;51&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /**
 *  @defgroup Allocators Memory Allocators
 *  @if maint
 *  stl_alloc.h implements some node allocators.  These are NOT the same as
 *  allocators in the C++ standard, nor in the original H-P STL.  They do not
 *  encapsulate different pointer types; we assume that there is only one
 *  pointer type.  The C++ standard allocators are intended to allocate
 *  individual objects, not pools or arenas.
 *
 *  In this file allocators are of two different styles:  &amp;amp;quot;standard&amp;amp;quot; and
 *  &amp;amp;quot;SGI&amp;amp;quot; (quotes included).  &amp;amp;quot;Standard&amp;amp;quot; allocators conform to 20.4.  &amp;amp;quot;SGI&amp;amp;quot;
 *  allocators differ in AT LEAST the following ways (add to this list as you
 *  discover them):
 *
 *   - &amp;amp;quot;Standard&amp;amp;quot; allocate() takes two parameters (n_count,hint=0) but &amp;amp;quot;SGI&amp;amp;quot;
 *     allocate() takes one paramter (n_size).
 *   - Likewise, &amp;amp;quot;standard&amp;amp;quot; deallocate()'s argument is a count, but in &amp;amp;quot;SGI&amp;amp;quot;
 *     is a byte size.
 *   - max_size(), construct(), and destroy() are missing in &amp;amp;quot;SGI&amp;amp;quot; allocators.
 *   - reallocate(p,oldsz,newsz) is added in &amp;amp;quot;SGI&amp;amp;quot;, and behaves as
 *     if p=realloc(p,newsz).
 *
 *  &amp;amp;quot;SGI&amp;amp;quot; allocators may be wrapped in __allocator to convert the interface
 *  into a &amp;amp;quot;standard&amp;amp;quot; one.
 *  @endif
 *
 *  @note The @c reallocate member functions have been deprecated for 3.2
 *        and will be removed in 3.4.  You must define @c _GLIBCPP_DEPRECATED
 *        to make this visible in 3.2; see c++config.h.
 *
 *  The canonical description of these classes is in docs/html/ext/howto.html
 *  or online at http://gcc.gnu.org/onlinedocs/libstdc++/ext/howto.html#3
*/

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Function-Based Exception Support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 19.1  Exception classes
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // -fno-exceptions Support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 19.1  Exception classes
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;40&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Else proceed normally.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;84&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Threading support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 * Copyright (c) 1997-1999
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;43&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_threads.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;51&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // The only supported threading model is GCC's own gthr.h abstraction layer.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;129&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;131&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Locking class.  Note that this class *does not have a
  // constructor*.  It must be initialized either statically, with
  // __STL_MUTEX_INITIALIZER, or dynamically, by explicitly calling
  // the _M_initialize member function.  (This is similar to the ways
  // that a pthreads mutex can be initialized.)  There are explicit
  // member functions for acquiring and releasing the lock.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; line=&quot;138&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // There is no constructor because static initialization is
  // essential for some uses, and only a class aggregate (see section
  // 8.5.1 of the C++ standard) can be initialized that way.  That
  // means we must have no constructors, no base classes, no virtual
  // functions, and no private or protected members.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; line=&quot;972&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // nonstandard construct and destroy functions -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996,1997
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_construct.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; line=&quot;145&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Raw memory manipulators -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996,1997
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_uninitialized.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;284&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; line=&quot;288&quot; suspect=&quot;0&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Local Variables:
// mode:C++
// End:

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Vector implementation -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this  software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_vector.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Function-Based Exception Support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 19.1  Exception classes
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // -fno-exceptions Support -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      //
// ISO C++ 14882: 19.1  Exception classes
//

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; line=&quot;40&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Else proceed normally.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; line=&quot;84&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; line=&quot;990&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // bit_vector and vector&amp;amp;lt;bool&amp;amp;gt; specialization -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996-1999
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file stl_bvector.h
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;337&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;339&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Declare a partial specialization of vector&amp;amp;lt;T, Alloc&amp;amp;gt;.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;723&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std 

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; line=&quot;727&quot; suspect=&quot;0&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Local Variables:
// mode:C++
// End:

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;1&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Vector implementation (out of line) -*- C++ -*-

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;3&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Copyright (C) 2001, 2002 Free Software Foundation, Inc.
//
// This file is part of the GNU ISO C++ Library.  This library is free
// software; you can redistribute it and/or modify it under the
// terms of the GNU General Public License as published by the
// Free Software Foundation; either version 2, or (at your option)
// any later version.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;11&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;16&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // You should have received a copy of the GNU General Public License along
// with this library; see the file COPYING.  If not, write to the Free
// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,
// USA.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;21&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // As a special exception, you may use this file as part of a free software
// library without restriction.  Specifically, if other files instantiate
// templates or use macros or inline functions from this file, or you compile
// this file and link it with other files to produce an executable, this
// file does not by itself cause the resulting executable to be covered by
// the GNU General Public License.  This exception does not however
// invalidate any other reasons why the executable file might be covered by
// the GNU General Public License.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;30&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /*
 *
 * Copyright (c) 1994
 * Hewlett-Packard Company
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Hewlett-Packard Company makes no
 * representations about the suitability of this software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 *
 *
 * Copyright (c) 1996
 * Silicon Graphics Computer Systems, Inc.
 *
 * Permission to use, copy, modify, distribute and sell this software
 * and its documentation for any purpose is hereby granted without fee,
 * provided that the above copyright notice appear in all copies and
 * that both that copyright notice and this permission notice appear
 * in supporting documentation.  Silicon Graphics makes no
 * representations about the suitability of this  software for any
 * purpose.  It is provided &amp;amp;quot;as is&amp;amp;quot; without express or implied warranty.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;56&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      /** @file vector.tcc
 *  This is an internal header file, included by other library headers.
 *  You should not attempt to use it directly.
 */

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/comments&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;__gnu_cxx&quot; type=&quot;namespace&quot;&amp;gt;
   &amp;lt;comments&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/exception&quot; line=&quot;101&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/type_traits.h&quot; line=&quot;324&quot; suspect=&quot;0&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // Forward declaration hack, should really include this from somewhere.

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; line=&quot;557&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/comments&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Module&quot; file=&quot;Parsers/Cxx/input/std.cc&quot; language=&quot;C++&quot; line=&quot;0&quot; name=&quot;Foo&quot; type=&quot;namespace&quot;&amp;gt;
   &amp;lt;comments&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Comment&quot; file=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; line=&quot;435&quot; suspect=&quot;1&quot;&amp;gt;
     &amp;lt;text&amp;gt;
      // namespace std

     &amp;lt;/text&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/comments&amp;gt;
   &amp;lt;declarations&amp;gt;
    &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Function&quot; file=&quot;Parsers/Cxx/input/std.cc&quot; language=&quot;C++&quot; line=&quot;5&quot; name=&quot;Foo.func(std::vector&amp;amp;lt;int&amp;amp;gt;)&quot; realname=&quot;func&quot; type=&quot;function&quot;&amp;gt;
     &amp;lt;parameters&amp;gt;
      &amp;lt;instance class=&quot;Synopsis.AST.Parameter&quot; identifier=&quot;array&quot; value=&quot;&quot;&amp;gt;
       &amp;lt;type&amp;gt;
        &amp;lt;instance class=&quot;Synopsis.Type.Parametrized&quot; language=&quot;C++&quot;&amp;gt;
         &amp;lt;parameters&amp;gt;
          &amp;lt;instance class=&quot;Synopsis.Type.Base&quot; language=&quot;C++&quot; name=&quot;int&quot;/&amp;gt;
         &amp;lt;/parameters&amp;gt;
         &amp;lt;template&amp;gt;
          &amp;lt;instance class=&quot;Synopsis.Type.Unknown&quot; language=&quot;C++&quot; name=&quot;std.vector&quot;&amp;gt;
           &amp;lt;link&amp;gt;
            std
            vector
           &amp;lt;/link&amp;gt;
          &amp;lt;/instance&amp;gt;
         &amp;lt;/template&amp;gt;
        &amp;lt;/instance&amp;gt;
       &amp;lt;/type&amp;gt;
      &amp;lt;/instance&amp;gt;
     &amp;lt;/parameters&amp;gt;
     &amp;lt;returnType&amp;gt;
      &amp;lt;instance class=&quot;Synopsis.Type.Base&quot; language=&quot;C++&quot; name=&quot;void&quot;/&amp;gt;
     &amp;lt;/returnType&amp;gt;
    &amp;lt;/instance&amp;gt;
    &amp;lt;instance accessibility=&quot;0&quot; class=&quot;Synopsis.AST.Builtin&quot; file=&quot;Parsers/Cxx/input/std.cc&quot; language=&quot;C++&quot; line=&quot;5&quot; name=&quot;EOS&quot; type=&quot;EOS&quot;/&amp;gt;
   &amp;lt;/declarations&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/declarations&amp;gt;
 &amp;lt;types&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Unknown&quot; language=&quot;C++&quot; name=&quot;__gnu_cxx&quot;&amp;gt;
   &amp;lt;link&amp;gt;
    __gnu_cxx
   &amp;lt;/link&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Unknown&quot; language=&quot;C++&quot; name=&quot;std&quot;&amp;gt;
   &amp;lt;link&amp;gt;
    std
   &amp;lt;/link&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;EOS&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;Foo&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.Type.Declared&quot; language=&quot;C++&quot; name=&quot;Foo.func(std::vector&amp;amp;lt;int&amp;amp;gt;)&quot;&amp;gt;
   &amp;lt;declaration/&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/types&amp;gt;
 &amp;lt;files&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/locale.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/unistd.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sys/sysmacros.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/locale.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/_G_config.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/posix2_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/stdlib.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/gnu/stubs.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/gconv.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_construct.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/iosfwd&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/exception_defines.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/bits/sigthread.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/concept_check.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stdio.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/vector&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/endian.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cwchar&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/environments.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stringfwd.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sys/types.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/wordsize.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/functexcept.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stdarg.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/atomicity.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/clocale&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/c++io.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/xopen_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_vector.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_uninitialized.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/wchar.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/new&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_alloc.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/limits.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/waitstatus.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/posix1_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/typesizes.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/sched.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/posix_opt.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/features.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/confname.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/exception&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cstdio&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/libio.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_threads.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/local_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cstddef&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/signal.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/c++config.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/xlocale.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/ctype.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/gthr.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/fpos.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cstring&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_pair.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sys/cdefs.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cstdlib&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/pthreadtypes.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/time.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/select.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/alloca.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/stdio_lim.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;Parsers/Cxx/input/std.cc&quot; is_main=&quot;1&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;declarations/&amp;gt;
   &amp;lt;includes&amp;gt;
    &amp;lt;instance class=&quot;Synopsis.AST.Include&quot; is_macro=&quot;0&quot; is_next=&quot;0&quot; name=&quot;&amp;amp;lt;vector&amp;amp;gt;&quot;&amp;gt;
     &amp;lt;target/&amp;gt;
    &amp;lt;/instance&amp;gt;
   &amp;lt;/includes&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_algobase.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_bvector.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/c++locale.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/pthread.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/gthr-default.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/syslimits.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/ctime&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/sigset.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/i686-pc-linux-gnu/bits/os_defines.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sched.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/waitflags.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/string.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/limits.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/climits&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_types.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/lib/gcc-lib/i686-pc-linux-gnu/3.3/include/stddef.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/wchar.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/type_traits.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/sys/select.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/vector.tcc&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/types.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/getopt.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/bits/time.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/bits/stl_iterator_base_funcs.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/group/fresco/local/include/c++/3.3/cctype&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
  &amp;lt;instance class=&quot;Synopsis.AST.SourceFile&quot; filename=&quot;/usr/include/endian.h&quot; is_main=&quot;0&quot; language=&quot;C++&quot;&amp;gt;
   &amp;lt;macro_calls/&amp;gt;
  &amp;lt;/instance&amp;gt;
 &amp;lt;/files&amp;gt;
&amp;lt;/ast&amp;gt;
&lt;/pre&gt;&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.stdarg" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;error reading expected output&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:01Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:01Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;No such file or directory&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.template" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:02Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:01Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.template_spec" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:02Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:02Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.template_spec2" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:02Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:02Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.try" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:02Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:02Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.typename" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:03Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:02Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.using" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:03Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:03Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.using2" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:03Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:03Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.using3" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:03Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:03Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.Cxx.using4" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:04Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:03Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Parsers.IDL.CosNaming" kind="test" outcome="FAIL">
  <annotation name="qmtest.cause">
   &quot;unable to run&quot;
  </annotation>
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:04Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:04Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
  <annotation name="synopsis_test.command">
   &quot;&lt;pre&gt;python Parsers/IDL/synopsis.py parse --output=Parsers/IDL/output/CosNaming.xml /group/synopsis/workspace/Synopsis/tests/Parsers/IDL/input/CosNaming.idl&lt;/pre&gt;&quot;
  </annotation>
  <annotation name="synopsis_test.error">
   &quot;&lt;pre&gt;Traceback (most recent call last):
  File &quot;Parsers/IDL/synopsis.py&quot;, line 7, in ?
    stylesheet = None)))
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/process.py&quot;, line 71, in process
    commands[command].process(ast, **props)
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Processor.py&quot;, line 180, in process
    ast = self.processors[-1].process(ast, **my_kwds)
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Formatters/Dump.py&quot;, line 55, in process
    self.write_declarations(self.ast.declarations())
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Formatters/Dump.py&quot;, line 181, in write_declarations
    for d in declarations: self.visit(d)
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Formatters/Dump.py&quot;, line 90, in visit
    self.handlers[t](obj)
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Formatters/Dump.py&quot;, line 174, in visit_instance
    self.visit(value)
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Formatters/Dump.py&quot;, line 90, in visit
    self.handlers[t](obj)
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Formatters/Dump.py&quot;, line 111, in visit_list
    self.visit(i)
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Formatters/Dump.py&quot;, line 90, in visit
    self.handlers[t](obj)
  File &quot;/group/synopsis/workspace/Synopsis/Synopsis/Formatters/Dump.py&quot;, line 155, in visit_instance
    self.node.setAttribute('file', value.filename())
AttributeError: 'str' object has no attribute 'filename'
&lt;/pre&gt;&quot;
  </annotation>
 </result>
 <result id="Parsers.Python.class" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:04Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:04Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Processors.Grouper.groups" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:05Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:04Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Processors.Linker.first" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:05Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:05Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Processors.Linker.second" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:05Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:05Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Processors.Previous.previous" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:06Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:05Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Processors.Previous.previous2" kind="test" outcome="PASS">
  <annotation name="qmtest.end_time">
   &quot;2005-06-22T19:33:06Z&quot;
  </annotation>
  <annotation name="qmtest.start_time">
   &quot;2005-06-22T19:33:06Z&quot;
  </annotation>
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.TypeAnalysis" kind="resource_cleanup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.SymbolLookup" kind="resource_cleanup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.Parser" kind="resource_cleanup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.Encoding" kind="resource_cleanup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>
 <result id="Cxx.ConstEvaluator" kind="resource_cleanup" outcome="PASS">
  <annotation name="qmtest.target">
   &quot;local&quot;
  </annotation>
 </result>

--- STATISTICS ---------------------------------------------------------------

     110        tests total
      47 ( 43%) tests FAIL
      63 ( 57%) tests PASS

--- TESTS THAT DID NOT PASS --------------------------------------------------

  Cxx.SymbolLookup.definitions-3a               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.definitions-3b               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.definitions-4a               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.definitions-4b               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.initialization-2-2           : FAIL    
    error reading expected output

  Cxx.SymbolLookup.lifetime-5a                  : FAIL    
    error reading expected output

  Cxx.SymbolLookup.lifetime-5b                  : FAIL    
    error reading expected output

  Cxx.SymbolLookup.lifetime-5c                  : FAIL    
    error reading expected output

  Cxx.SymbolLookup.lifetime-7                   : FAIL    
    error reading expected output

  Cxx.SymbolLookup.lifetime-8                   : FAIL    
    error reading expected output

  Cxx.SymbolLookup.lifetime-9a                  : FAIL    
    error reading expected output

  Cxx.SymbolLookup.lifetime-9b                  : FAIL    
    error reading expected output

  Cxx.SymbolLookup.linkage-6                    : FAIL    
    error reading expected output

  Cxx.SymbolLookup.linkage-7a                   : FAIL    
    error reading expected output

  Cxx.SymbolLookup.linkage-7b                   : FAIL    
    error reading expected output

  Cxx.SymbolLookup.linkage-7c                   : FAIL    
    error reading expected output

  Cxx.SymbolLookup.qualified-3a                 : FAIL    
    error reading expected output

  Cxx.SymbolLookup.qualified-3b                 : FAIL    
    error reading expected output

  Cxx.SymbolLookup.qualified-5                  : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-0-2                    : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-1                      : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-2                      : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-3                      : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-4                      : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-class-1-5a             : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-namespace-1a           : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-namespace-1b           : FAIL    
    error reading expected output

  Cxx.SymbolLookup.scope-namespace-1c           : FAIL    
    error reading expected output

  Cxx.SymbolLookup.storage-auto-1               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.types-2                      : FAIL    
    error reading expected output

  Cxx.SymbolLookup.types-3                      : FAIL    
    error reading expected output

  Cxx.SymbolLookup.types-7                      : FAIL    
    error reading expected output

  Cxx.SymbolLookup.unqualified-10               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.unqualified-7a               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.unqualified-7b               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.unqualified-7c               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.unqualified-7d               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.unqualified-7e               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.unqualified-7f               : FAIL    
    error reading expected output

  Cxx.SymbolLookup.using-directive-1a           : FAIL    
    error reading expected output

  Cxx.SymbolLookup.using-directive-2a           : FAIL    
    error reading expected output

  Cxx.TypeAnalysis.simple                       : FAIL    
    error reading expected output

  Parsers.C.simple                              : FAIL    
    error reading expected output

  Parsers.Cpp.include                           : FAIL    
    incorrect output

  Parsers.Cxx.std                               : FAIL    
    incorrect output

  Parsers.Cxx.stdarg                            : FAIL    
    error reading expected output

  Parsers.IDL.CosNaming                         : FAIL    
    unable to run


</results>
